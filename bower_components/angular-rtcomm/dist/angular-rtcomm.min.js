/**
 * Copyright 2014 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Angular module for Rtcomm
 * @version v0.0.1 - 2015-01-12
 * @link https://github.com/WASdev/lib.angular-rtcomm
 * @author Brian Pulito <brian_pulito@us.ibm.com> (https://github.com/bpulito)
 */
var rtcommModule=angular.module("angular-rtcomm",["ui.bootstrap","treeControl"]);rtcommModule.config(["$logProvider",function(a){a.debugEnabled(!0)}]),rtcommModule.factory("RtcommConfig",["$location","$log",function(a,b){var c={server:a.host(),port:a.port(),rtcommTopicPath:"/rtcomm/",createEndpoint:!1,appContext:"default",userid:"",presence:{topic:""}};b.debug("providerConfig.server: "+c.server),b.debug("providerConfig.port: "+c.port);var d={chat:!0,webrtc:!0},e=!0,f=!0;return{setProviderConfig:function(a){c.server="undefined"!=typeof a.server?a.server:c.server,c.port="undefined"!=typeof a.port?a.port:c.port,c.rtcommTopicPath="undefined"!=typeof a.rtcommTopicPath?a.rtcommTopicPath:c.rtcommTopicPath,c.createEndpoint="undefined"!=typeof a.createEndpoint?a.createEndpoint:c.createEndpoint,c.appContext="undefined"!=typeof a.appContext?a.appContext:c.appContext,c.presence.topic="undefined"!=typeof a.presenceTopic?a.presenceTopic:c.presence.topic,d.chat="undefined"!=typeof a.chat?a.chat:d.chat,d.webrtc="undefined"!=typeof a.webrtc?a.webrtc:d.webrtc,e="undefined"!=typeof a.broadcastAudio?a.broadcastAudio:e,f="undefined"!=typeof a.broadcastVideo?a.broadcastVideo:f,"undefined"!=typeof a.userid&&(c.userid=a.userid)},getProviderConfig:function(){return c},getWebRTCEnabled:function(){return d.webrtc},getChatEnabled:function(){return d.chat},getBroadcastAudio:function(){return e},getBroadcastVideo:function(){return f}}}]),rtcommModule.factory("RtcommService",["$rootScope","RtcommConfig","$log",function(a,b,c){var d=new rtcomm.EndpointProvider,e=!1,f=null,g=[],h=null,i=!1;d.setAppContext(b.getProviderConfig().appContext);var j=function(){return null==h&&(h={state:"available",userDefines:[]}),h},k=function(){var a={broadcast:{audio:b.getBroadcastAudio(),video:b.getBroadcastVideo()},webrtc:b.getWebRTCEnabled(),chat:b.getChatEnabled()};return a};d.on("queueupdate",function(b){c.debug("<<------rtcomm-service------>> - Event: queueupdate"),c.debug("queueupdate",b),a.$evalAsync(function(){a.$broadcast("queueupdate",b)})}),d.on("newendpoint",function(b){c.debug("<<------rtcomm-service------>> - Event: newendpoint remoteEndpointID: "+b.getRemoteEndpointID()),a.$evalAsync(function(){a.$broadcast("newendpoint",b)})});var l=function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){a.$broadcast(b.eventName,b)}),1==i&&a.$digest()};d.setRtcommEndpointConfig({"session:started":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){o(b.endpoint.id).sessionStarted=!0,a.$broadcast(b.eventName,b)}),1==i&&a.$digest()},"session:alerting":l,"session:trying":l,"session:ringing":l,"session:queued":l,"session:failed":l,"session:stopped":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){b.endpoint.id in g&&delete g[b.endpoint.id],a.$broadcast(b.eventName,b)}),1==i&&a.$digest()},"webrtc:connected":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){o(b.endpoint.id).webrtcConnected=!0,a.$broadcast(b.eventName,b)}),1==i&&a.$digest()},"webrtc:disconnected":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){o(b.endpoint.id).webrtcConnected=!1,a.$broadcast(b.eventName,b)}),1==i&&a.$digest()},"chat:connected":l,"chat:disconnected":l,"chat:message":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var c={time:new Date,name:b.message.from,message:angular.copy(b.message.message)};o(b.endpoint.id).chats.push(c),a.$broadcast(b.eventName,b)}),1==i&&a.$digest()},destroyed:l});var m=function(e){c.debug("<<------rtcomm-service------>> - Event: Provider init succeeded"),null!=h&&(c.debug("RtcommService: initSuccess: updating presence record"),d.publishPresence(h)),a.$evalAsync(function(){var c={ready:e.ready,registered:e.registered,endpoint:e.endpoint,userid:b.getProviderConfig().userid};a.$broadcast("rtcomm::init",!0,c)}),1==i&&a.$digest()},n=function(b){c.debug("<<------rtcomm-service------>> - Event: Provider init failed: error: ",b),a.$evalAsync(function(){a.$broadcast("rtcomm::init",!1,b)}),1==i&&a.$digest()},o=function(a){if(a in g)return g[a];var b={chats:[],webrtcConnected:!1,sessionStarted:!1};return g[a]=b,b};return{setKarmaTesting:function(){i=!0},isInitialized:function(){return e},setConfig:function(a){c.debug("rtcomm-services: setConfig: config: ",a),b.setProviderConfig(a),d.setRtcommEndpointConfig(k()),0==e&&("undefined"==typeof a.userid||""!=b.getProviderConfig().userid)&&(d.init(b.getProviderConfig(),m,n),e=!0)},getPresenceMonitor:function(a){return d.getPresenceMonitor(a)},publishPresence:function(){1==e&&d.publishPresence(j())},addToPresenceRecord:function(a){for(var b=0;b<a.length;b++)j().userDefines.push(a[b]);1==e&&(c.debug("RtcommService: addToPresenceRecord: updating presence record to: ",j()),d.publishPresence(j()))},removeFromPresenceRecord:function(a,b){for(var f=0;f<a.length;f++)for(var g=0;g<j().userDefines.length;g++)if(j().userDefines[g].name==a[f].name){j().userDefines.splice(g,1);break}1==e&&b&&(c.debug("RtcommService: removeFromPresenceRecord: updating presence record to: ",j()),d.publishPresence(j()))},setPresenceRecordState:function(a){return j().state=a,d.publishPresence(j())},getEndpoint:function(a){var b=null;return b="undefined"==typeof a||null==a?d.createRtcommEndpoint():d.getRtcommEndpoint(a)},destroyEndpoint:function(a){d.getRtcommEndpoint(a).destroy()},register:function(a){0==e?(b.getProviderConfig().userid=a,d.init(b.getProviderConfig(),m,n),e=!0):c.error("rtcomm-services: register: ERROR: endpoint provider already initialized")},unregister:function(){1==e?(d.destroy(),e=!1,n("destroyed")):c.error("rtcomm-services: unregister: ERROR: endpoint provider not initialized")},joinQueue:function(a){d.joinQueue(a)},leaveQueue:function(a){d.leaveQueue(a)},getQueues:function(){return f},sendChatMessage:function(a,b){var c=o(b);c.chats.push(a),d.getRtcommEndpoint(b).chat.send(a.message)},getChats:function(a){var b=o(a);return null!=b?b.chats:null},isWebrtcConnected:function(a){var b=o(a);return null!=b?b.webrtcConnected:!1},getSessionState:function(a){return d.getRtcommEndpoint(a).getState()},setAlias:function(a){"undefined"!=typeof a&&""!=a&&d.setUserID(a)},setUserID:function(a){"undefined"!=typeof a&&""!=a&&(b.setProviderConfig({userid:a}),d.init(b.getProviderConfig(),m,n))},setPresenceTopic:function(a){"undefined"!=typeof a&&""!=a&&(b.setProviderConfig({presenceTopic:a}),d.init(b.getProviderConfig(),m,n))}}}]),rtcommModule.directive("rtcommSessionmgr",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-sessionmgr.html",controller:["$scope","$rootScope",function(c,d){c.sessions=[],c.sessMgrActiveEndpointUUID=null,c.publishPresence=!1,c.sessionPresenceData=[],c.init=function(a){c.publishPresence=a,c.updatePresence()},c.$on("endpointActivated",function(d,e){if(b.debug("rtcommSessionmgr: endpointActivated ="+e),null!=c.sessMgrActiveEndpointUUID){var f=c.getSession(c.sessMgrActiveEndpointUUID);null!=f&&(f.activated=!1)}var g=c.getSession(e);g.activated=!0,g.remoteEndpointID=a.getEndpoint(e).getRemoteEndpointID(),c.sessMgrActiveEndpointUUID=e}),c.$on("session:started",function(a,e){b.debug("rtcommSessionmgr: session:started: uuid ="+e.endpoint.id);var f=c.getSession(e.endpoint.id);f.remoteEndpointID=e.endpoint.getRemoteEndpointID(),c.sessions.push(f),c.updatePresence(),d.$broadcast("endpointActivated",e.endpoint.id)}),c.$on("session:failed",function(a,b){c.cleanupSession(b.endpoint.id)}),c.$on("session:rejected",function(a,b){c.cleanupSession(b.endpoint.id)}),c.$on("session:stopped",function(a,b){c.cleanupSession(b.endpoint.id)}),c.activateSession=function(a){b.debug("rtcommSessionmgr: activateEndpoint ="+a),c.sessMgrActiveEndpointUUID!=a&&d.$broadcast("endpointActivated",a)},c.cleanupSession=function(b){for(var e=0;e<c.sessions.length;e++)if(c.sessions[e].endpointUUID===b){a.getEndpoint(b).destroy(),c.sessions.splice(e,1),0!=c.sessions.length?d.$broadcast("endpointActivated",c.sessions[0].endpointUUID):d.$broadcast("noEndpointActivated"),c.updatePresence();break}},c.getSession=function(a){for(var b=null,d=0;d<c.sessions.length;d++)if(c.sessions[d].endpointUUID===a){b=c.sessions[d];break}return null==b&&(b={endpointUUID:a,remoteEndpointID:null,activated:!0}),b},c.updatePresence=function(){1==c.publishPresence&&(a.removeFromPresenceRecord(c.sessionPresenceData,!1),c.sessionPresenceData=[{name:"sessions",value:String(c.sessions.length)}],a.addToPresenceRecord(c.sessionPresenceData))}}],controllerAs:"sessionmgr"}}]),rtcommModule.directive("rtcommRegister",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-register.html",controller:["$scope",function(c){c.nextAction="Register",c.onRegClick=function(){"Register"===c.nextAction?(b.debug("Register: reguserid ="+c.reguserid),a.register(c.reguserid)):(b.debug("Unregister: reguserid ="+c.reguserid),a.unregister())},c.$on("rtcomm::init",function(a,b,d){1==b?(c.nextAction="Unregister",c.reguserid=d.userid):(c.nextAction="Register",c.reguserid="destroyed"==d?null:"Init failed:"+d)})}],controllerAs:"register"}}]),rtcommModule.directive("rtcommQueues",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-queues.html",controller:["$scope",function(c){c.rQueues=[],c.autoJoinQueues=!1,c.queuePresenceData=[],c.queuePublishPresence=!1,c.init=function(a,d){b.debug("rtcommQueues: autoJoinQueues = "+a),c.autoJoinQueues=a,c.queuePublishPresence=d},c.$on("queueupdate",function(a,d){b.debug("rtcommQueues: scope queues",c.rQueues),Object.keys(d).forEach(function(a){b.debug("rtcommQueues: Push queue: "+d[a]),b.debug("rtcommQueues: autoJoinQueues: "+c.autoJoinQueues),c.rQueues.push(d[a]),1==c.autoJoinQueues&&c.onQueueClick(d[a])}),c.updateQueuePresence()}),c.$on("rtcomm::init",function(a,d){0==d&&(b.debug("rtcommQueues: init: clear queues"),c.rQueues=[])}),c.onQueueClick=function(d){b.debug("rtcommQueues: onClick: TOP");for(var e=0;e<c.rQueues.length;e++)c.rQueues[e].endpointID===d.endpointID?(b.debug("rtcommQueues: onClick: queue.endpointID = "+d.endpointID),0==d.active?(a.joinQueue(d.endpointID),c.rQueues[e].active=!0):(a.leaveQueue(d.endpointID),c.rQueues[e].active=!1)):e==c.rQueues.length-1&&b.debug("rtcommQueues: ERROR: queue.endpointID: "+d.endpointID+" not found in list of queues");c.updateQueuePresence()},c.updateQueuePresence=function(){if(1==c.queuePublishPresence){a.removeFromPresenceRecord(c.queuePresenceData,!1),c.queuePresenceData=[];for(var b=0;b<c.rQueues.length;b++)c.rQueues[b].active===!0&&c.queuePresenceData.push({name:"queue",value:c.rQueues[b].endpointID});a.addToPresenceRecord(c.queuePresenceData)}}}],controllerAs:"queues"}}]),rtcommModule.directive("rtcommPresence",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-presence.html",controller:["$scope","$rootScope",function(c,d){c.monitorTopics=[],c.presenceData=[],c.expandedNodes=[],c.protocolList={chat:!0,webrtc:!1},c.treeOptions={nodeChildren:"nodes",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},c.init=function(a){c.protocolList=a},c.onCallClick=function(b){var e=a.getEndpoint();d.$broadcast("endpointActivated",e.id),1==c.protocolList.chat&&e.chat.enable(),1==c.protocolList.webrtc&&e.webrtc.enable(function(a){a||alertMessage("Failed to get local Audio/Video - nothing to broadcast")}),e.connect(b)},c.$on("rtcomm::init",function(){a.publishPresence();var d=a.getPresenceMonitor();c.presenceData=d.getPresenceData(),c.presenceData.length>=1&&c.expandedNodes.push(c.presenceData[0]);for(var e=0;e<c.monitorTopics.length;e++)b.debug("rtcommPresence: monitorTopic: "+c.monitorTopics[e]),d.add(c.monitorTopics[e])})}],controllerAs:"presence"}}]),rtcommModule.directive("rtcommEndpoint",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-endpoint.html",transclude:"true",controller:["$scope",function(a){a.epActiveEndpointUUID=null,a.displayEndpoint=!0,a.init=function(c){b.debug("rtcommEndpoint: displayEndoint = "+c),a.displayEndpoint=c},a.$on("endpointActivated",function(c,d){b.debug("endointActivated received: endpointID = "+d),a.epActiveEndpointUUID=d,a.displayEndpoint=!0}),a.$on("session:failed",function(b,c){a.epActiveEndpointUUID==c.endpoint.id&&(a.displayEndpoint=!1)}),a.$on("session:rejected",function(b,c){a.epActiveEndpointUUID==c.endpoint.id&&(a.displayEndpoint=!1)}),a.$on("session:stopped",function(b,c){a.epActiveEndpointUUID==c.endpoint.id&&(a.displayEndpoint=!1)})}],controllerAs:"endpoint"}}]),rtcommModule.directive("rtcommEndpointctrl",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-endpointctrl.html",controller:["$scope",function(c){c.epCtrlActiveEndpointUUID=null,c.epCtrlAVConnected=!1,c.sessionState="session:stopped",c.epCtrlRemoteEndpointID=null,c.failureReason="",c.queueCount=0,c.displayAVToggle=!0,c.init=function(a){c.displayAVToggle=a},c.disconnect=function(){b.debug("Disconnecting call for endpoint: "+c.epCtrlActiveEndpointUUID),a.getEndpoint(c.epCtrlActiveEndpointUUID).disconnect()},c.toggleAV=function(){b.debug("Enable AV for endpoint: "+c.epCtrlActiveEndpointUUID),0==c.epCtrlAVConnected?a.getEndpoint(c.epCtrlActiveEndpointUUID).webrtc.enable(function(a){a||alertMessage("Failed to get local Audio/Video - nothing to broadcast")}):(b.debug("Disable AV for endpoint: "+c.epCtrlActiveEndpointUUID),a.getEndpoint(c.epCtrlActiveEndpointUUID).webrtc.disable())},c.$on("session:started",function(a,d){b.debug("session:started received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:started",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:stopped",function(a,d){b.debug("session:stopped received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:stopped",c.epCtrlRemoteEndpointID=null)}),c.$on("session:failed",function(a,d){b.debug("session:failed received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:failed",c.failureReason=d.reason,c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:alerting",function(a,d){b.debug("session:alerting received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:alerting",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:queued",function(a,d){b.debug("session:queued received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:queued",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:trying",function(a,d){b.debug("session:trying received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:trying",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:ringing",function(a,d){b.debug("session:ringing received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:ringing",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("webrtc:connected",function(a,b){c.epCtrlActiveEndpointUUID==b.endpoint.id&&(c.epCtrlAVConnected=!0)}),c.$on("webrtc:disconnected",function(a,b){c.epCtrlActiveEndpointUUID==b.endpoint.id&&(c.epCtrlAVConnected=!1)}),c.$on("endpointActivated",function(b,d){c.epCtrlActiveEndpointUUID=d,c.epCtrlAVConnected=a.isWebrtcConnected(d),c.epCtrlRemoteEndpointID=a.getEndpoint(d).getRemoteEndpointID(),c.sessionState=a.getSessionState(d)}),c.$on("noEndpointActivated",function(){c.epCtrlAVConnected=!1,c.epCtrlRemoteEndpointID=null,c.sessionState=c.DISCONNECTED})}],controllerAs:"endpointctrl"}}]),rtcommModule.directive("rtcommVideo",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-video.html",controller:["$scope",function(c){c.videoActiveEndpointUUID=null,c.$on("endpointActivated",function(d,e){if(b.debug("rtcommEndpointmgr: endpointActivated ="+e),c.videoActiveEndpointUUID!=e){c.videoActiveEndpointUUID=e;var f=a.getEndpoint(e);f.webrtc.setLocalMedia({mediaOut:document.querySelector("#selfView"),mediaIn:document.querySelector("#remoteView")})}})}],controllerAs:"video"}}]),rtcommModule.directive("rtcommChat",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-chat.html",controller:["$scope",function(c){c.chats=[],c.chatActiveEndpointUUID=null,c.$on("endpointActivated",function(d,e){b.debug("rtcommChat: endpointActivated ="+e),c.chats=a.getChats(e),c.chatActiveEndpointUUID=e}),c.$on("noEndpointActivated",function(){c.chats=[],c.chatActiveEndpointUUID=null}),c.keySendMessage=function(a){13===a.which&&c.sendMessage()},c.sendMessage=function(){var b={time:new Date,name:a.getEndpoint(c.chatActiveEndpointUUID).getLocalEndpointID(),message:angular.copy(c.message)};a.sendChatMessage(b,c.chatActiveEndpointUUID),c.message=""}}],controllerAs:"chat"}}]),rtcommModule.controller("RtcommAlertModalController",["$scope","RtcommService","$modal","$log",function(a,b,c,d){a.alertingEndpointObject=null,a.autoAnswerNewMedia=!1,a.alertActiveEndpointUUID=null,a.caller=null,a.init=function(b){d.debug("rtcommAlert: autoAnswerNewMedia = "+b),a.autoAnswerNewMedia=b},a.$on("endpointActivated",function(b,c){a.alertActiveEndpointUUID=c}),a.$on("session:alerting",function(b,c){a.alertActiveEndpointUUID==c.endpoint.id&&0==a.autoAnswerNewMedia||a.alertActiveEndpointUUID!=c.endpoint.id?(d.debug("rtcommAlert: display alterting model: alertActiveEndpointUUID = "+c.endpoint+" autoAnswerNewMedia = "+a.autoAnswerNewMedia),a.caller=c.endpoint.getRemoteEndpointID(),a.alertingEndpointObject=c.endpoint,a.showAlerting()):(d.debug("Accepting media from: "+c.endpoint.getRemoteEndpointID()+" for endpoint: "+c.endpoint.id),c.endpoint.accept())}),a.showAlerting=function(b){var e=c.open({templateUrl:"templates/rtcomm/rtcomm-modal-alert.html",controller:"RtcommAlertModalInstanceCtrl",size:b,resolve:{caller:function(){return a.caller}}});e.result.then(function(){d.debug("Accepting call from: "+a.caller+" for endpoint: "+a.alertingEndpointObject.id),a.alertingEndpointObject.accept(),a.alertingEndpointObject=null},function(){d.debug("Rejecting call from: "+a.caller+" for endpoint: "+a.alertingEndpointObject.id),a.alertingEndpointObject.reject(),a.alertingEndpointObject=null})}}]),rtcommModule.controller("RtcommAlertModalInstanceCtrl",["$scope","$modalInstance","$log","caller",function(a,b,c,d){a.caller=d,a.ok=function(){c.debug("Accepting alerting call"),b.close()},a.cancel=function(){c.debug("Rejecting alerting call"),b.dismiss("cancel")}}]),rtcommModule.controller("RtcommCallModalController",["$scope","$rootScope","RtcommService","$modal","$log",function(a,b,c,d,e){a.calleeID=null,a.callerID=null,a.enableCallModel=!1,a.init=function(b){a.calleeID=b},a.$on("rtcomm::init",function(b,c){e.debug("RtcommCallModalController: rtcomm::init: success = "+c),a.enableCallModel=1==c?!0:!1}),a.$on("session:started",function(){a.enableCallModel=!1}),a.$on("session:stopped",function(){a.enableCallModel=!0}),a.placeCall=function(f){var g=d.open({templateUrl:"templates/rtcomm/rtcomm-modal-call.html",controller:"RtcommCallModalInstanceCtrl",size:f,resolve:{}});g.result.then(function(d){e.debug("rtcommCallModal: Calling calleeID: "+a.calleeID),e.debug("rtcommCallModal: CallerID: "+d),null==a.callerID&&"undefined"!=typeof d&&""!=d&&(a.callerID=d,c.setAlias(d));var f=c.getEndpoint();b.$broadcast("endpointActivated",f.id),f.chat.enable(),f.connect(a.calleeID)},function(){e.info("Modal dismissed at: "+new Date)})}}]),rtcommModule.controller("RtcommCallModalInstanceCtrl",["$scope","$modalInstance","RtcommService",function(a,b){a.endpointAlias="",a.ok=function(){b.close(a.endpointAlias)},a.cancel=function(){b.dismiss("cancel")}}]),rtcommModule.controller("RtcommConfigController",["$scope","$http","RtcommService","$log",function(a,b,c,d){d.debug("RtcommConfigController: configURL = "+a.configURL),a.setConfig=function(a){d.debug("RtcommConfigController: setting config data:"+a),c.setConfig(a)},a.init=function(b){d.debug("RtcommConfigController: initing configURL = "+b),a.configURL=b,a.getConfig()},a.getConfig=function(){b.get(a.configURL).success(function(a){c.setConfig(a)})}}]),angular.module("angular-rtcomm").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-chat.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-comment"></span> Chat</div><div class="panel-body"><ul class="chat"><li class="right clearfix" ng-repeat="chat in chats"><div class="header"><strong class="primary-font">{{chat.name}}</strong> <small class="pull-right text-muted"><span class="glyphicon glyphicon-time"></span>{{chat.time | date:\'HH:mm:ss MM-dd-yyyy\'}}</small></div><p>{{chat.message}}</p></li></ul></div><div class="panel-footer"><div class="input-group"><input id="chat-input" type="text" class="form-control input-sm" placeholder="Type your message here..." type="text" ng-model="message" ng-keypress="keySendMessage($event)"> <span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-chat" ng-click="sendMessage()" focusinput="true" ng-disabled="(chatActiveEndpointUUID == null)">Send</button></span></div></div></div></div><!-- chat list ng-controller div -->'),a.put("templates/rtcomm/rtcomm-endpoint.html",'<div id="endpointContainer" class="panel panel-primary"><div ng-transclude></div></div>'),a.put("templates/rtcomm/rtcomm-endpointctrl.html",'<div class="endpoint-controls"><div class="btn-group pull-left" style="padding: 10px"><button id="btnDisconnectEndpoint" class="btn btn-primary" ng-click="disconnect()" ng-disabled="(sessionState == \'session:stopped\' || sessionState == \'session:failed\')"><span class="glyphicon glyphicon glyphicon-resize-full" aria-hidden="true" aria-label="Disconnect"></span> Disconnect</button> <button id="btnEnableAV" class="btn btn-primary" ng-click="toggleAV()" focusinput="true" ng-hide="!displayAVToggle" ng-disabled="(sessionState == \'session:stopped\' || sessionState == \'session:failed\')"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true" aria-label="Enable A/V"></span> {{epCtrlAVConnected ? \'Disable A/V\' : \'Enable A/V\'}}</button></div><p class="endpoint-controls-title navbar-text pull-right" ng-switch on="sessionState"><span ng-switch-when="session:started">Connected to {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:stopped">Disconnected</span> <span ng-switch-when="session:alerting">Inbound call from {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:trying">Attempting to call {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:ringing">Call to {{epCtrlRemoteEndpointID}} is ringing</span> <span ng-switch-when="session:queued">Waiting in queue at: {{queueCount}}</span> <span ng-switch-when="session:failed">Call failed with reason: {{failureReason}}</span></p></div>'),a.put("templates/rtcomm/rtcomm-modal-alert.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">New call alert</h4></div><div class="modal-body"><p>Do you want to accept a call from {{caller}}.</p></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Yes</button> <button type="button" ng-click="cancel()" class="btn btn-primary" data-dismiss="modal">No</button></div>'),a.put("templates/rtcomm/rtcomm-modal-call.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">Get Help</h4></div><div class="modal-body"><p>To help us serve you better, please provide some information before we begin.</p><form class="form-horizontal" role="form"><div class="form-group"><label for="name" class="col-sm-2 control-label">Name</label><div class="col-sm-10"><input type="text" class="form-control" id="name" placeholder="Your Name" ng-model="endpointAlias"></div></div></form></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Connect</button> <button type="button" ng-click="cancel()" class="btn btn-default" data-dismiss="modal">Cancel</button></div>'),a.put("templates/rtcomm/rtcomm-presence.html",'<!-- as an attribute --><div><div class="panel-presence panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-user"></span> Presence</div><div class="panel-presence-body"><div treecontrol class="tree-light" tree-model="presenceData" options="treeOptions" on-selection="showSelected(node)" expanded-nodes="expandedNodes"><button type="button" class="btn btn-primary btn-xs" aria-label="Left Align" ng-show="(node.record && !node.self)" ng-click="onCallClick(node.name)"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true" aria-label="expand record"></span></button> {{node.name}} {{node.value ? \': \' + node.value : \'\'}}</div></div></div></div>'),a.put("templates/rtcomm/rtcomm-queues.html",'<div><div class="panel panel-primary"><div class="panel-heading"><span class="glyphicon glyphicon-sort-by-attributes-alt"></span> Queues</div><div class="queueContainer"><button type="button" ng-class="{\'btn btn-primary btn-default btn-block\': queue.active, \'btn btn-default btn-default btn-block\': !queue.active}" ng-repeat="queue in rQueues" ng-click="onQueueClick(queue)" data-toggle="tooltip" data-placement="top" title="{{queue.description}}">{{queue.active ? \'Leave\' : \'Join\'}} {{queue.endpointID}}</button></div></div></div>'),a.put("templates/rtcomm/rtcomm-register.html",'<div><div class="panel panel-primary"><div class="input-group"><input id="register-input" type="text" class="form-control input-sm" placeholder="Enter your ID here..." type="text" ng-model="reguserid"><span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-register" ng-click="onRegClick(reguserid)" focusinput="true">{{nextAction}}</button></span></div></div></div>'),a.put("templates/rtcomm/rtcomm-sessionmgr.html",'<div class="session-manager"><div class="btn-group pull-left" style="padding: 10px"><div><button type="button" ng-switch on="session.activated" ng-class="{\'btn btn-primary btn-sm\': session.activated, \'btn btn-default btn-sm\': !session.activated}" ng-repeat="session in sessions" ng-click="activateSession(session.endpointUUID)"><!-- span class="glyphicon glyphicon-eye-open" aria-hidden="true" ng-switch-when=true></span --><!-- span class="glyphicon glyphicon-eye-close" aria-hidden="true" ng-switch-when=false></span -->{{session.remoteEndpointID}}</button></div></div><p class="session-manager-title navbar-text pull-right">Sessions</p></div>'),a.put("templates/rtcomm/rtcomm-video.html",'<div id="videoContainer"><div id="selfViewContainer"><video title="selfView" id="selfView" class="selfView" autoplay muted></video></div><video title="remoteView" id="remoteView" class="remoteView" autoplay></video><!--  video title="remoteView" id="remoteView" class="remoteView" autoplay="true" poster="../views/rtcomm/images/video_camera_big.png"></video --></div>')}]);