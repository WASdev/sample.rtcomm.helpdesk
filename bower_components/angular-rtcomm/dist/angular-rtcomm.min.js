/**
 * Copyright 2014 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Angular module for Rtcomm
 * @version v0.0.1 - 2015-02-16
 * @link https://github.com/WASdev/lib.angular-rtcomm
 * @author Brian Pulito <brian_pulito@us.ibm.com> (https://github.com/bpulito)
 */
var rtcommModule=angular.module("angular-rtcomm",["ui.bootstrap","treeControl"]);rtcommModule.config(["$logProvider",function(a){a.debugEnabled(!0)}]),rtcommModule.config(["$locationProvider",function(a){a.html5Mode({enabled:!0,requireBase:!1})}]),rtcommModule.factory("RtcommConfig",["$location","$log","$window",function(a,b){b.debug("RtcommConfig: Abs URL: "+a.absUrl());var c=a.search().disableRtcomm;c="undefined"==typeof c||null==c?!1:"true"==c?!0:!1,b.debug("RtcommConfig: _disableRtcomm = "+c);var d={server:a.host(),port:a.port(),rtcommTopicPath:"/rtcomm/",createEndpoint:!1,appContext:"default",userid:"",presence:{topic:""}};b.debug("providerConfig.server: "+d.server),b.debug("providerConfig.port: "+d.port);var e={chat:!0,webrtc:!0},f=!0,g=!0,h=function(a){d.server="undefined"!=typeof a.server?a.server:d.server,d.port="undefined"!=typeof a.port?a.port:d.port,d.rtcommTopicPath="undefined"!=typeof a.rtcommTopicPath?a.rtcommTopicPath:d.rtcommTopicPath,d.createEndpoint="undefined"!=typeof a.createEndpoint?a.createEndpoint:d.createEndpoint,d.appContext="undefined"!=typeof a.appContext?a.appContext:d.appContext,d.presence.topic="undefined"!=typeof a.presenceTopic?a.presenceTopic:d.presence.topic,e.chat="undefined"!=typeof a.chat?a.chat:e.chat,e.webrtc="undefined"!=typeof a.webrtc?a.webrtc:e.webrtc,f="undefined"!=typeof a.broadcastAudio?a.broadcastAudio:f,g="undefined"!=typeof a.broadcastVideo?a.broadcastVideo:g,"undefined"!=typeof a.userid&&(d.userid=a.userid)};return{setProviderConfig:function(a){h(a)},getProviderConfig:function(){return d},getWebRTCEnabled:function(){return e.webrtc},getChatEnabled:function(){return e.chat},getBroadcastAudio:function(){return f},getBroadcastVideo:function(){return g},isRtcommDisabled:function(){return c}}}]),rtcommModule.factory("RtcommService",["$rootScope","RtcommConfig","$log","$http",function(a,b,c,d){var e=new rtcomm.EndpointProvider,f=!1,g=null,h=[],i=null,j=!1,k="selfView",l="remoteView";e.setAppContext(b.getProviderConfig().appContext);var m=function(){return null==i&&(i={state:"available",userDefines:[]}),i},n=function(){var a={broadcast:{audio:b.getBroadcastAudio(),video:b.getBroadcastVideo()},webrtc:b.getWebRTCEnabled(),chat:b.getChatEnabled()};return a};e.on("queueupdate",function(b){c.debug("<<------rtcomm-service------>> - Event: queueupdate"),c.debug("queueupdate",b),a.$evalAsync(function(){a.$broadcast("queueupdate",b)})}),e.on("newendpoint",function(b){c.debug("<<------rtcomm-service------>> - Event: newendpoint remoteEndpointID: "+b.getRemoteEndpointID()),b.on("onetimemessage",function(b){if(c.debug("<<------rtcomm-onetimemessage------>> - Event: ",b),"undefined"!=b.onetimemessage.type&&"iFrameURL"==b.onetimemessage.type){var d=s(b.endpoint.id);d.iFrameURL=b.onetimemessage.iFrameURL,a.$evalAsync(function(){a.$broadcast("rtcomm::iframeUpdate",b.endpoint.id,b.onetimemessage.iFrameURL)})}}),a.$evalAsync(function(){a.$broadcast("newendpoint",b)})});var o=function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){if(b.eventName.indexOf("session:")>-1){var c=s(b.endpoint.id);c.sessionState=b.eventName}a.$broadcast(b.eventName,b)}),1==j&&a.$digest()};e.setRtcommEndpointConfig({"session:started":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var c=s(b.endpoint.id);c.sessionStarted=!0,c.remoteEndpointID=b.endpoint.getRemoteEndpointID(),a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},"session:alerting":o,"session:trying":o,"session:ringing":o,"session:queued":o,"session:failed":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){t(b.endpoint.id),a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},"session:stopped":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){t(b.endpoint.id),a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},"webrtc:connected":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){s(b.endpoint.id).webrtcConnected=!0,a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},"webrtc:disconnected":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var c=r(b.endpoint.id);null!=c&&(c.webrtcConnected=!1),a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},"chat:connected":o,"chat:disconnected":o,"chat:message":function(b){c.debug("<<------rtcomm-service------>> - Event: "+b.eventName+" remoteEndpointID: "+b.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var c={time:new Date,name:b.message.from,message:angular.copy(b.message.message)};s(b.endpoint.id).chats.push(c),a.$broadcast(b.eventName,b)}),1==j&&a.$digest()},destroyed:o});var p=function(d){c.debug("<<------rtcomm-service------>> - Event: Provider init succeeded"),null!=i&&(c.debug("RtcommService: initSuccess: updating presence record"),e.publishPresence(i)),a.$evalAsync(function(){var c={ready:d.ready,registered:d.registered,endpoint:d.endpoint,userid:b.getProviderConfig().userid};a.$broadcast("rtcomm::init",!0,c)}),1==j&&a.$digest()},q=function(b){c.debug("<<------rtcomm-service------>> - Event: Provider init failed: error: ",b),a.$evalAsync(function(){a.$broadcast("rtcomm::init",!1,b)}),1==j&&a.$digest()},r=function(a){for(var b=null,c=0;c<h.length;c++)if(h[c].endpointUUID===a){b=h[c];break}return b},s=function(a){for(var b=null,c=0;c<h.length;c++)if(h[c].endpointUUID===a){b=h[c];break}return null==b&&(b={endpointUUID:a,chats:[],webrtcConnected:!1,sessionStarted:!1,iFrameURL:"about:blank",remoteEndpointID:null,activated:!0,sessionState:"session:stopped"},h[h.length]=b),b},t=function(b){for(var c=0;c<h.length;c++)if(h[c].endpointUUID===b){u(b).destroy(),h.splice(c,1),0==h.length?a.$broadcast("noEndpointActivated"):v(h[0].endpointUUID);break}},u=function(b){var d=null;return"undefined"==typeof b||null==b?(c.debug("getEndpoint: create new endpoint and setup onetimemessage event"),d=e.createRtcommEndpoint(),d.on("onetimemessage",function(b){if(c.debug("<<------rtcomm-onetimemessage------>> - Event: ",b),"undefined"!=b.onetimemessage.type&&"iFrameURL"==b.onetimemessage.type){var d=s(b.endpoint.id);d.iFrameURL=b.onetimemessage.iFrameURL,a.$evalAsync(function(){a.$broadcast("rtcomm::iframeUpdate",b.endpoint.id,b.onetimemessage.iFrameURL)})}})):d=e.getRtcommEndpoint(b),d},v=function(b){var c=w();if(null!=c&&c!=b){var d=r(c);null!=d&&(d.activated=!1)}var d=s(b);d.activated=!0,a.$broadcast("endpointActivated",b)},w=function(){for(var a=null,b=0;b<h.length;b++)if(1==h[b].activated){a=h[b].endpointUUID;break}return a};return{setKarmaTesting:function(){j=!0},isInitialized:function(){return f},setConfig:function(a){return 1==b.isRtcommDisabled()?void c.debug("RtcommService:setConfig: isRtcommDisabled = true; return with no setup"):(c.debug("rtcomm-services: setConfig: config: ",a),b.setProviderConfig(a),e.setRtcommEndpointConfig(n()),void(0==f&&("undefined"!=typeof a.identityServlet&&null!=a.identityServlet?d.get(a.identityServlet).success(function(a){"undefined"!=typeof a.userid?(b.setProviderConfig(a),e.init(b.getProviderConfig(),p,q),f=!0):c.error("RtcommService: setConfig promise: Invalid JSON object return from identityServlet: ",a)}).error(function(a,b){c.debug("RtcommService: setConfig promise: error accessing userid from identityServlet: "+b)}):("undefined"==typeof a.userid||""!=b.getProviderConfig().userid)&&(e.init(b.getProviderConfig(),p,q),f=!0))))},getPresenceMonitor:function(a){return e.getPresenceMonitor(a)},publishPresence:function(){1==f&&e.publishPresence(m())},addToPresenceRecord:function(a){for(var b=0;b<a.length;b++)m().userDefines.push(a[b]);1==f&&(c.debug("RtcommService: addToPresenceRecord: updating presence record to: ",m()),e.publishPresence(m()))},removeFromPresenceRecord:function(a,b){for(var d=0;d<a.length;d++)for(var g=0;g<m().userDefines.length;g++)if(m().userDefines[g].name==a[d].name){m().userDefines.splice(g,1);break}1==f&&b&&(c.debug("RtcommService: removeFromPresenceRecord: updating presence record to: ",m()),e.publishPresence(m()))},setPresenceRecordState:function(a){return m().state=a,e.publishPresence(m())},getEndpoint:function(a){return u(a)},destroyEndpoint:function(a){e.getRtcommEndpoint(a).destroy()},register:function(a){0==f?(b.getProviderConfig().userid=a,e.init(b.getProviderConfig(),p,q),f=!0):c.error("rtcomm-services: register: ERROR: endpoint provider already initialized")},unregister:function(){1==f?(e.destroy(),f=!1,q("destroyed")):c.error("rtcomm-services: unregister: ERROR: endpoint provider not initialized")},joinQueue:function(a){e.joinQueue(a)},leaveQueue:function(a){e.leaveQueue(a)},getQueues:function(){return g},sendChatMessage:function(a,b){var c=s(b);c.chats.push(a),e.getRtcommEndpoint(b).chat.send(a.message)},getChats:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.chats:null}return null},isWebrtcConnected:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.webrtcConnected:!1}return!1},getSessionState:function(a){return"undefined"!=typeof a&&null!=a?e.getRtcommEndpoint(a).getState():"session:stopped"},setAlias:function(a){"undefined"!=typeof a&&""!=a&&e.setUserID(a)},setUserID:function(a){"undefined"!=typeof a&&""!=a&&(b.setProviderConfig({userid:a}),e.init(b.getProviderConfig(),p,q))},setPresenceTopic:function(a){"undefined"!=typeof a&&""!=a&&(b.setProviderConfig({presenceTopic:a}),e.init(b.getProviderConfig(),p,q))},getIframeURL:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.iFrameURL:null}return null},putIframeURL:function(a,b){c.debug("RtcommService: putIframeURL: endpointUUID: "+a+" newURL: "+b);var d=e.getRtcommEndpoint(a);if(null!=d){var f=s(a);f.iFrameURL=b;var g={type:"iFrameURL",iFrameURL:b};c.debug("RtcommService: putIframeURL: sending new iFrame URL"),d.sendOneTimeMessage(g)}},placeCall:function(a,b){var c=u();return b.indexOf("chat")>-1&&c.chat.enable(),b.indexOf("webrtc")>-1&&c.webrtc.enable(),v(c.id),c.connect(a),c.id},getSessions:function(){return h},setActiveEndpoint:function(a){v(a)},getActiveEndpoint:function(){return w()},getRemoteEndpoint:function(a){var b=null;if(null!=a){var c=r(a);null!=c&&(b=c.remoteEndpointID)}return b},setDefaultViewSelector:function(){k="selfView",l="remoteView"},setViewSelector:function(a,b){k=a,l=b},setVideoView:function(a){c.debug("rtcommVideo: setting local media");var b=null;"undefined"!=typeof a&&null!=a?b=u(a):null!=w()&&(b=u(w())),null!=b&&b.webrtc.setLocalMedia({mediaOut:document.querySelector("#"+k),mediaIn:document.querySelector("#"+l)})}}}]),rtcommModule.directive("rtcommSessionmgr",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-sessionmgr.html",controller:["$scope",function(c){c.sessions=a.getSessions(),c.sessMgrActiveEndpointUUID=a.getActiveEndpoint(),c.publishPresence=!1,c.sessionPresenceData=[],c.init=function(a){c.publishPresence=a,c.updatePresence()},c.$on("endpointActivated",function(a,d){b.debug("rtcommSessionmgr: endpointActivated ="+d),c.sessMgrActiveEndpointUUID=d}),c.$on("session:started",function(d,e){b.debug("rtcommSessionmgr: session:started: uuid ="+e.endpoint.id),c.updatePresence(),a.setActiveEndpoint(e.endpoint.id)}),c.activateSession=function(d){b.debug("rtcommSessionmgr: activateEndpoint ="+d),c.sessMgrActiveEndpointUUID!=d&&a.setActiveEndpoint(d)},c.updatePresence=function(){1==c.publishPresence&&(a.removeFromPresenceRecord(c.sessionPresenceData,!1),c.sessionPresenceData=[{name:"sessions",value:String(c.sessions.length)}],a.addToPresenceRecord(c.sessionPresenceData))}}],controllerAs:"sessionmgr"}}]),rtcommModule.directive("rtcommRegister",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-register.html",controller:["$scope",function(c){c.nextAction="Register",c.onRegClick=function(){"Register"===c.nextAction?(b.debug("Register: reguserid ="+c.reguserid),a.register(c.reguserid)):(b.debug("Unregister: reguserid ="+c.reguserid),a.unregister())},c.$on("rtcomm::init",function(a,b,d){1==b?(c.nextAction="Unregister",c.reguserid=d.userid):(c.nextAction="Register",c.reguserid="destroyed"==d?null:"Init failed:"+d)})}],controllerAs:"register"}}]),rtcommModule.directive("rtcommQueues",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-queues.html",controller:["$scope",function(c){c.rQueues=[],c.autoJoinQueues=!1,c.queuePresenceData=[],c.queuePublishPresence=!1,c.queueFilter=null,c.init=function(a,d,e){b.debug("rtcommQueues: autoJoinQueues = "+a),c.autoJoinQueues=a,c.queuePublishPresence=d,"undefined"!=typeof e&&(c.queueFilter=e)},c.$on("queueupdate",function(a,d){b.debug("rtcommQueues: scope queues",c.rQueues),Object.keys(d).forEach(function(a){b.debug("rtcommQueues: Push queue: "+d[a]),b.debug("rtcommQueues: autoJoinQueues: "+c.autoJoinQueues),0==c.filterOutQueue(d[a])&&(c.rQueues.push(d[a]),1==c.autoJoinQueues&&c.onQueueClick(d[a]))}),c.updateQueuePresence()}),c.$on("rtcomm::init",function(a,d){0==d&&(b.debug("rtcommQueues: init: clear queues"),c.rQueues=[])}),c.filterOutQueue=function(a){var b=!0;if(null!=c.queueFilter)for(var d=0;d<c.queueFilter.length;++d){var e=c.queueFilter[d];if(e==a.endpointID){b=!1;break}}else b=!1;return b},c.onQueueClick=function(d){b.debug("rtcommQueues: onClick: TOP");for(var e=0;e<c.rQueues.length;e++)c.rQueues[e].endpointID===d.endpointID?(b.debug("rtcommQueues: onClick: queue.endpointID = "+d.endpointID),0==d.active?(a.joinQueue(d.endpointID),c.rQueues[e].active=!0):(a.leaveQueue(d.endpointID),c.rQueues[e].active=!1)):e==c.rQueues.length-1&&b.debug("rtcommQueues: ERROR: queue.endpointID: "+d.endpointID+" not found in list of queues");c.updateQueuePresence()},c.updateQueuePresence=function(){if(1==c.queuePublishPresence){a.removeFromPresenceRecord(c.queuePresenceData,!1),c.queuePresenceData=[];for(var b=0;b<c.rQueues.length;b++)c.rQueues[b].active===!0&&c.queuePresenceData.push({name:"queue",value:c.rQueues[b].endpointID});a.addToPresenceRecord(c.queuePresenceData)}}}],controllerAs:"queues"}}]),rtcommModule.directive("rtcommPresence",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-presence.html",controller:["$scope","$rootScope",function(c){c.monitorTopics=[],c.presenceData=[],c.expandedNodes=[],c.protocolList={chat:!0,webrtc:!1},c.treeOptions={nodeChildren:"nodes",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},c.init=function(a){c.protocolList=a},c.onCallClick=function(b){var d=a.getEndpoint();a.setActiveEndpoint(d.id),1==c.protocolList.chat&&d.chat.enable(),1==c.protocolList.webrtc&&d.webrtc.enable(function(a){a||alertMessage("Failed to get local Audio/Video - nothing to broadcast")}),d.connect(b)},c.$on("rtcomm::init",function(){a.publishPresence();var d=a.getPresenceMonitor();d.on("updated",function(){b.debug("<<------rtcommPresence: updated------>>"),c.$apply()}),c.presenceData=d.getPresenceData(),c.presenceData.length>=1&&c.expandedNodes.push(c.presenceData[0]);for(var e=0;e<c.monitorTopics.length;e++)b.debug("rtcommPresence: monitorTopic: "+c.monitorTopics[e]),d.add(c.monitorTopics[e])})}],controllerAs:"presence"}}]),rtcommModule.directive("rtcommEndpointStatus",["RtcommService","$log",function(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-endpoint-status.html",controller:["$scope",function(c){c.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),c.epCtrlRemoteEndpointID=a.getRemoteEndpoint(c.epCtrlActiveEndpointUUID),c.sessionState=a.getSessionState(c.epCtrlActiveEndpointUUID),c.failureReason="",c.queueCount=0,c.$on("session:started",function(a,d){b.debug("session:started received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:started",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:stopped",function(a,d){b.debug("session:stopped received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:stopped",c.epCtrlRemoteEndpointID=null)}),c.$on("session:failed",function(a,d){b.debug("session:failed received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:failed",c.failureReason=d.reason,c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:alerting",function(a,d){b.debug("session:alerting received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:alerting",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:queued",function(a,d){b.debug("session:queued received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:queued",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:trying",function(a,d){b.debug("session:trying received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:trying",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("session:ringing",function(a,d){b.debug("session:ringing received: endpointID = "+d.endpoint.id),c.epCtrlActiveEndpointUUID==d.endpoint.id&&(c.sessionState="session:ringing",c.epCtrlRemoteEndpointID=d.endpoint.getRemoteEndpointID())}),c.$on("endpointActivated",function(b,d){c.epCtrlActiveEndpointUUID=d,c.epCtrlRemoteEndpointID=a.getEndpoint(d).getRemoteEndpointID(),c.sessionState=a.getSessionState(d)}),c.$on("noEndpointActivated",function(){c.epCtrlRemoteEndpointID=null,c.sessionState="session:stopped"})}]}}]),rtcommModule.directive("rtcommVideo",["RtcommService","$log",function(){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-video.html",controller:"RtcommVideoController"}}]),rtcommModule.directive("rtcommChat",["RtcommService","$log","$location","$anchorScroll",function(a,b,c,d){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-chat.html",controller:["$scope",function(e){e.chatActiveEndpointUUID=a.getActiveEndpoint(),e.chats=a.getChats(e.chatActiveEndpointUUID),d(),e.$on("endpointActivated",function(c,d){b.debug("rtcommChat: endpointActivated ="+d),e.chats=a.getChats(d),e.chatActiveEndpointUUID=d}),e.$on("noEndpointActivated",function(){e.chats=[],e.chatActiveEndpointUUID=null}),e.keySendMessage=function(a){13===a.which&&e.sendMessage()},e.sendMessage=function(){var b={time:new Date,name:a.getEndpoint(e.chatActiveEndpointUUID).getLocalEndpointID(),message:angular.copy(e.message)};e.message="",a.sendChatMessage(b,e.chatActiveEndpointUUID),"undefined"!=typeof e.chats&&null!=e.chats&&(c.hash(e.chats.length-1),d())}}],controllerAs:"chat"}}]),rtcommModule.directive("rtcommIframe",["RtcommService","$log","$sce","$location","$window",function(a,b,c,d,e){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-iframe.html",controller:["$scope",function(f){f.iframeActiveEndpointUUID=a.getActiveEndpoint(),f.iframeURL=null,f.initiframeURL=null,f.syncSource=!1,f.init=function(a){1==a&&(f.syncSource=!0,f.initiframeURL=d.absUrl())},f.$on("session:started",function(c,d){b.debug("session:started received: endpointID = "+d.endpoint.id),1==f.syncSource&&a.putIframeURL(d.endpoint.id,f.initiframeURL)}),f.$on("endpointActivated",function(d,e){b.debug("rtcommIframe: endpointActivated ="+e),0==f.syncSource&&(f.iframeURL=c.trustAsResourceUrl(a.getIframeURL(e)),f.iframeActiveEndpointUUID=e)}),f.$on("noEndpointActivated",function(){0==f.syncSource&&(f.iframeURL=c.trustAsResourceUrl("about:blank"),f.iframeActiveEndpointUUID=null)}),f.$on("rtcomm::iframeUpdate",function(a,d,g){0==f.syncSource?(b.debug("rtcomm::iframeUpdate: "+g),g+="?disableRtcomm=true",f.iframeURL=c.trustAsResourceUrl(g)):(b.debug("rtcomm::iframeUpdate: load this url in a new tab: "+g),e.open(c.trustAsResourceUrl(g),"_blank"))}),f.setURL=function(d){b.debug("rtcommIframe: setURL: newURL: "+d),a.putIframeURL(f.iframeActiveEndpointUUID,d),f.iframeURL=c.trustAsResourceUrl(d)},f.forward=function(){},f.backward=function(){}}],controllerAs:"rtcommiframe"}}]),rtcommModule.controller("RtcommAlertModalController",["$scope","RtcommService","$modal","$log",function(a,b,c,d){a.alertingEndpointUUID=null,a.autoAnswerNewMedia=!1,a.alertActiveEndpointUUID=b.getActiveEndpoint(),a.caller=null,a.init=function(b){d.debug("rtcommAlert: autoAnswerNewMedia = "+b),a.autoAnswerNewMedia=b},a.$on("endpointActivated",function(b,c){a.alertActiveEndpointUUID=c}),a.$on("session:alerting",function(b,c){a.alertActiveEndpointUUID==c.endpoint.id&&0==a.autoAnswerNewMedia||a.alertActiveEndpointUUID!=c.endpoint.id?(d.debug("rtcommAlert: display alterting model: alertActiveEndpointUUID = "+c.endpoint+" autoAnswerNewMedia = "+a.autoAnswerNewMedia),a.caller=c.endpoint.getRemoteEndpointID(),a.alertingEndpointUUID=c.endpoint.id,a.showAlerting()):(d.debug("Accepting media from: "+c.endpoint.getRemoteEndpointID()+" for endpoint: "+c.endpoint.id),c.endpoint.accept())}),a.showAlerting=function(e){var f=c.open({templateUrl:"templates/rtcomm/rtcomm-modal-alert.html",controller:"RtcommAlertModalInstanceCtrl",size:e,resolve:{caller:function(){return a.caller}}});f.result.then(function(){var c=b.getEndpoint(a.alertingEndpointUUID);c&&(d.debug("Accepting call from: "+a.caller+" for endpoint: "+a.alertingEndpointUUID),c.accept(),c=null)},function(){var c=b.getEndpoint(a.alertingEndpointUUID);c&&(d.debug("Rejecting call from: "+a.caller+" for endpoint: "+a.alertingEndpointUUID),c.reject(),c=null)})}}]),rtcommModule.controller("RtcommAlertModalInstanceCtrl",["$scope","$modalInstance","$log","caller",function(a,b,c,d){a.caller=d,a.ok=function(){c.debug("Accepting alerting call"),b.close()},a.cancel=function(){c.debug("Rejecting alerting call"),b.dismiss("cancel")}}]),rtcommModule.controller("RtcommCallModalController",["$scope","RtcommService","$modal","$log",function(a,b,c,d){a.calleeID=null,a.callerID=null,a.enableCallModel=!1,a.mediaToEnable=["chat"],a.init=function(b,c){a.calleeID=b,"undefined"!=typeof c&&(a.mediaToEnable=c)},a.$on("rtcomm::init",function(b,c){d.debug("RtcommCallModalController: rtcomm::init: success = "+c),a.enableCallModel=1==c?!0:!1}),a.$on("session:started",function(){a.enableCallModel=!1}),a.$on("session:stopped",function(){a.enableCallModel=!0}),a.placeCall=function(e){var f=c.open({templateUrl:"templates/rtcomm/rtcomm-modal-call.html",controller:"RtcommCallModalInstanceCtrl",size:e,resolve:{}});f.result.then(function(c){d.debug("rtcommCallModal: Calling calleeID: "+a.calleeID),d.debug("rtcommCallModal: CallerID: "+c),null==a.callerID&&"undefined"!=typeof c&&""!=c&&(a.callerID=c,b.setAlias(c)),b.placeCall(a.calleeID,a.mediaToEnable)},function(){d.info("Modal dismissed at: "+new Date)})}}]),rtcommModule.controller("RtcommCallModalInstanceCtrl",["$scope","$modalInstance","RtcommService",function(a,b){a.endpointAlias="",a.ok=function(){b.close(a.endpointAlias)},a.cancel=function(){b.dismiss("cancel")}}]),rtcommModule.controller("RtcommConfigController",["$scope","$http","RtcommService","$log",function(a,b,c,d){a.extendedConfig=null,d.debug("RtcommConfigController: configURL = "+a.configURL),a.setConfig=function(a){d.debug("RtcommConfigController: setting config data:"+a),c.setConfig(a)},a.init=function(b,c){d.debug("RtcommConfigController: initing configURL = "+b),a.configURL=b,"undefined"!=typeof c&&(a.extendedConfig=c),a.getConfig()},a.getConfig=function(){b.get(a.configURL).success(function(b){null!=a.extendedConfig&&(angular.extend(b,a.extendedConfig),d.debug("RtcommConfigController: extended config object: "+b)),c.setConfig(b)}).error(function(a,b){d.debug("RtcommConfigController: error accessing config: "+b)})}}]),rtcommModule.controller("RtcommVideoController",["$scope","$http","RtcommService","$log",function(a,b,c,d){a.avConnected=c.isWebrtcConnected(c.getActiveEndpoint()),a.init=function(a,b){c.setViewSelector(a,b);var d=c.getActiveEndpoint();"undefined"!=typeof d&&null!=d&&c.setVideoView(d)};var e=c.getActiveEndpoint();"undefined"!=typeof e&&null!=e&&c.setVideoView(e),a.$on("endpointActivated",function(b,e){d.debug("rtcommVideo: endpointActivated ="+e),c.setVideoView(e),a.avConnected=c.isWebrtcConnected(c.getActiveEndpoint())}),a.$on("noEndpointActivated",function(){a.avConnected=!1}),a.$on("webrtc:connected",function(b,d){c.getActiveEndpoint()==d.endpoint.id&&(a.avConnected=!0)}),a.$on("webrtc:disconnected",function(b,d){c.getActiveEndpoint()==d.endpoint.id&&(a.avConnected=!1)})}]),rtcommModule.controller("RtcommEndpointController",["$scope","$http","RtcommService","$log",function(a,b,c,d){a.epCtrlActiveEndpointUUID=c.getActiveEndpoint(),a.epCtrlAVConnected=c.isWebrtcConnected(a.epCtrlActiveEndpointUUID),a.sessionState=c.getSessionState(a.epCtrlActiveEndpointUUID),a.disconnect=function(){d.debug("Disconnecting call for endpoint: "+a.epCtrlActiveEndpointUUID),c.getEndpoint(a.epCtrlActiveEndpointUUID).disconnect()},a.toggleAV=function(){d.debug("Enable AV for endpoint: "+a.epCtrlActiveEndpointUUID),0==a.epCtrlAVConnected?c.getEndpoint(a.epCtrlActiveEndpointUUID).webrtc.enable(function(a){a||alertMessage("Failed to get local Audio/Video - nothing to broadcast")}):(d.debug("Disable AV for endpoint: "+a.epCtrlActiveEndpointUUID),c.getEndpoint(a.epCtrlActiveEndpointUUID).webrtc.disable())},a.$on("session:started",function(b,c){d.debug("session:started received: endpointID = "+c.endpoint.id),a.epCtrlActiveEndpointUUID==c.endpoint.id&&(a.sessionState="session:started")}),a.$on("session:stopped",function(b,c){d.debug("session:stopped received: endpointID = "+c.endpoint.id),a.epCtrlActiveEndpointUUID==c.endpoint.id&&(a.sessionState="session:stopped")}),a.$on("session:failed",function(b,c){d.debug("session:failed received: endpointID = "+c.endpoint.id),a.epCtrlActiveEndpointUUID==c.endpoint.id&&(a.sessionState="session:failed")}),a.$on("webrtc:connected",function(b,c){a.epCtrlActiveEndpointUUID==c.endpoint.id&&(a.epCtrlAVConnected=!0)}),a.$on("webrtc:disconnected",function(b,c){a.epCtrlActiveEndpointUUID==c.endpoint.id&&(a.epCtrlAVConnected=!1)}),a.$on("endpointActivated",function(b,d){a.epCtrlActiveEndpointUUID=d,a.epCtrlAVConnected=c.isWebrtcConnected(d)}),a.$on("noEndpointActivated",function(){a.epCtrlAVConnected=!1})}]),angular.module("angular-rtcomm").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-chat.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-comment"></span> Chat</div><div class="panel-body"><ul class="chat"><li class="right clearfix" ng-repeat="chat in chats"><div id="{{$index}}" class="header"><strong class="primary-font">{{chat.name}}</strong> <small class="pull-right text-muted">{{chat.time | date:\'HH:mm:ss\'}}</small></div><p>{{chat.message}}</p></li></ul></div><div class="panel-footer"><div class="input-group"><input id="chat-input" type="text" class="form-control input-sm" placeholder="Type your message here..." type="text" ng-model="message" ng-keypress="keySendMessage($event)"> <span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-chat" ng-click="sendMessage()" focusinput="true" ng-disabled="(chatActiveEndpointUUID == null)">Send</button></span></div></div></div></div><!-- chat list ng-controller div -->'),a.put("templates/rtcomm/rtcomm-endpoint-status.html",'<div class="endpoint-status"><p class="endpoint-controls-title navbar-text pull-right" ng-switch on="sessionState"><span ng-switch-when="session:started">Connected to {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:stopped">No active sessions, waiting...</span> <span ng-switch-when="session:alerting">Inbound call from {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:trying">Attempting to call {{epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:ringing">Call to {{epCtrlRemoteEndpointID}} is ringing</span> <span ng-switch-when="session:queued">Waiting in queue at: {{queueCount}}</span> <span ng-switch-when="session:failed">Call failed with reason: {{failureReason}}</span></p></div>'),a.put("templates/rtcomm/rtcomm-iframe.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-link"></span> URL Sharing</div><div class="rtcomm-iframe"><iframe width="100%" height="100%" ng-src="{{iframeURL}}"></iframe></div><div class="row"><div class="col-lg-2"><button id="btnBackward" class="btn btn-primary" ng-click="backward()" focusinput="true" ng-disabled="(iframeUrl == null)"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true" aria-label="Backward"></span> Backward</button></div><div class="col-lg-2"><button id="btnForward" class="btn btn-primary" ng-click="forward()" ng-disabled="(iframeUrl == null)"><span class="glyphicon glyphicon-arrow-right" aria-hidden="true" aria-label="Forward"></span> Forward</button></div><div class="col-lg-8"><div class="input-group"><input id="setUrl" type="text" class="form-control" type="text" ng-model="newUrl"><span class="input-group-btn"><button class="btn btn-primary" id="btn-send-url" ng-click="setURL(newUrl)" focusinput="true">Set URL</button></span></div><!-- /input-group --></div></div></div></div>'),a.put("templates/rtcomm/rtcomm-modal-alert.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">New call alert</h4></div><div class="modal-body"><p>Do you want to accept a call from {{caller}}.</p></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Yes</button> <button type="button" ng-click="cancel()" class="btn btn-primary" data-dismiss="modal">No</button></div>'),a.put("templates/rtcomm/rtcomm-modal-call.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">Get Help</h4></div><div class="modal-body"><p>To help us serve you better, please provide some information before we begin.</p><form class="form-horizontal" role="form"><div class="form-group"><label for="name" class="col-sm-2 control-label">Name</label><div class="col-sm-10"><input type="text" class="form-control" id="name" placeholder="Your Name" ng-model="endpointAlias"></div></div></form></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Connect</button> <button type="button" ng-click="cancel()" class="btn btn-default" data-dismiss="modal">Cancel</button></div>'),a.put("templates/rtcomm/rtcomm-presence.html",'<div treecontrol class="tree-light" tree-model="presenceData" options="treeOptions" on-selection="showSelected(node)" expanded-nodes="expandedNodes"><button type="button" class="btn btn-primary btn-xs" aria-label="Left Align" ng-show="(node.record && !node.self)" ng-click="onCallClick(node.name)"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true" aria-label="expand record"></span></button> {{node.name}} {{node.value ? \': \' + node.value : \'\'}}</div>'),a.put("templates/rtcomm/rtcomm-queues.html",'<div><div class="panel panel-primary"><div class="panel-heading"><span class="glyphicon glyphicon-sort-by-attributes-alt"></span> Queues</div><div class="queueContainer"><button type="button" ng-class="{\'btn btn-primary btn-default btn-block\': queue.active, \'btn btn-default btn-default btn-block\': !queue.active}" ng-repeat="queue in rQueues" ng-click="onQueueClick(queue)" data-toggle="tooltip" data-placement="top" title="{{queue.description}}">{{queue.active ? \'Leave\' : \'Join\'}} {{queue.endpointID}}</button></div></div></div>'),a.put("templates/rtcomm/rtcomm-register.html",'<div><div class="panel panel-primary"><div class="input-group"><input id="register-input" type="text" class="form-control input-sm" placeholder="Enter your ID here..." type="text" ng-model="reguserid"><span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-register" ng-click="onRegClick(reguserid)" focusinput="true">{{nextAction}}</button></span></div></div></div>'),a.put("templates/rtcomm/rtcomm-sessionmgr.html",'<div class="session-manager"><div class="btn-group pull-left" style="padding: 10px"><div><button class="session-manager-button" type="button" ng-switch on="session.activated" ng-class="{\'btn btn-primary btn-sm\': session.activated, \'btn btn-default btn-sm\': !session.activated}" ng-repeat="session in sessions" ng-click="activateSession(session.endpointUUID)"><span class="glyphicon glyphicon-eye-open" aria-hidden="true" ng-switch-when="true"></span> <span class="glyphicon glyphicon-eye-close" aria-hidden="true" ng-switch-when="false"></span> {{session.remoteEndpointID}}</button></div></div><p class="session-manager-title navbar-text pull-right">Sessions</p></div>'),a.put("templates/rtcomm/rtcomm-video.html",'<div id="videoContainer"><div id="selfViewContainer"><video title="selfView" id="selfView" class="selfView" autoplay muted></video></div><video title="remoteView" id="remoteView" class="remoteView" autoplay></video><!--  video title="remoteView" id="remoteView" class="remoteView" autoplay="true" poster="../views/rtcomm/images/video_camera_big.png"></video --></div>')
}]);