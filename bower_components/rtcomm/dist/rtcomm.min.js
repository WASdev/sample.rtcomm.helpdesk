/*! lib.rtcomm.clientjs 1.0.0-beta.9 05-01-2015 */
console.log("lib.rtcomm.clientjs 1.0.0-beta.9 05-01-2015"),function(a,b){"function"==typeof define&&define.amd?define([],function(){return a.returnExportsGlobal=b()}):"object"==typeof exports?module.exports=b():(a.rtcomm=a.rtcomm||{},a.rtcomm.util=b())}(this,function(){console.log("lib.rtcomm.clientjs 1.0.0-beta.9 05-01-2015");var a={},b=a,c=function(){var a={MESSAGE:1,INFO:2,EVENT:4,DEBUG:7,TRACE:15},b="INFO";this.l=function(c,d){var e=d&&d.getLogLevel?d.getLogLevel():b;return(a[e]&a[c])===a[c]},this.log=function(a){console.log(a)},this.setLogLevel=this.s=function(c){if(!(c in a))throw new Error(c+"is not a valid Log level, try: "+JSON.stringify(a));b=c},this.getLogLevel=this.g=function(){return b}};console.log("logging already set? ",d);var d=d||new c,e=d.l,f=function(a,b){for(var c in b){if(!a.hasOwnProperty(c))throw new Error("Parameter ["+c+"] is missing in config object");if(b[c]!==typeof a[c])throw e("INFO")&&console.log("Typeof "+c+" is incorrect. "+typeof a[c]+"  Should be a "+b[c]),new Error("Typeof "+c+" is incorrect. "+typeof a[c]+"  Should be a "+b[c])}return!0},g=function(a,b,c){var d=[];for(var e in b)if(b.hasOwnProperty(e)){if(e.match(/^_/))continue;if(e.toUpperCase()===e)continue;d.push(e)}for(var f in a){if(!a.hasOwnProperty(f)||-1===d.indexOf(f)&&!c)throw new Error(f+" is an invalid property for "+b);b[f]=a[f]}return!0},h=function(a,b){console.log(this+".setConfig() passed in: -->  "+JSON.stringify(a));var c=b.required||{},e=b.optional||{},g=b.defaults||{};if(a){c&&f(a,c),a.logLevel&&(d.setLogLevel(a.logLevel),delete a.logLevel);var h=e?i(c,e):c;for(var j in h)h.hasOwnProperty(j)&&(h[j]=g.hasOwnProperty(j)?g[j]:null);j=null;for(j in a){if(!a.hasOwnProperty(j)||!h.hasOwnProperty(j))throw new Error(j+" is an invalid property for "+JSON.stringify(h));h[j]=a[j]&&"object"==typeof a[j]?i(a[j],h[j]):a[j]}return console.log(this+".setConfig() Returning -->  "+JSON.stringify(h)),h}throw new Error("A minumum config is required: "+JSON.stringify(c))},i=function(a,b){var c=[],d={};for(var e in a)a.hasOwnProperty(e)&&c.push(e);e=null;for(e in b)b.hasOwnProperty(e)&&c.push(e);return c.forEach(function(c){d[c]=a[c]?a[c]:b[c]}),d},j=function(a){var b={};return Object.keys(a).forEach(function(c){b[c]=a[c]}),b},k=function(a,b,c){function d(){if(e("DEBUG")&&console.log("whenTrue -- waiting: "+g),g>f)return b(!1),!1;var c=a();return c?(e("DEBUG")&&console.log("whenTrue TRUE",c),b(c),!0):(setTimeout(d,h),void(g+=h))}e("DEBUG")&&console.log("whenTrue!",a,b,c);var f=c||500,g=0,h=50;d()},l=function(a){var b=(new Date).getTime(),c=a.replace(/[xy]/g,function(a){var c=(b+16*Math.random())%16|0;return b=Math.floor(b/16),("x"===a?c:7&c|8).toString(16)});return c},m=function(){return l("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx")},n=function(a,b){for(var c=[],d=0;d<a.length;d++)for(var e=0;e<b.length;e++)a[d]===b[e]&&c.push(a[d]);return c};a.Log=c,a.validateConfig=f,a.setConfig=h,a.applyConfig=g,a.generateUUID=m,a.generateRandomBytes=l,a.whenTrue=k,a.makeCopy=j,a.combineObjects=i,a.commonArrayItems=n;var o={setState:function(a,b){"undefined"!=typeof this.state?(this.state=a,this.emit(a,b)):this.emit(a,b)},listEvents:function(){console.log("******* "+this+" Configured events ***********");for(var a in this.events)this.events.hasOwnProperty(a)&&console.log("******* ["+a+"] has "+this.events[a].length+" listeners registered")},clearEventListeners:function(){for(var a in this.events)this.events.hasOwnProperty(a)&&(this.events[a]=[])},createEvent:function(a){if(!this.hasOwnProperty("events"))throw new Error("createEvent() requires an events property to store the events");this.events[a]=[]},removeEvent:function(a){a in this.events&&delete this.events[a]},hasEventListener:function(a){return a in this.events&&this.events[a].length>0},on:function(a,b){if(!(this.events&&this.events[a]&&Array.isArray(this.events[a])))throw new Error("on() requires an events property listing the events. this.events["+a+"] = [];");e("EVENT",this)&&console.log(this+" Adding a listener callback for event["+a+"]"),e("TRACE",this)&&console.log(this+" Callback for event["+a+"] is",b),this.events[a].push(b)},emit:function(a,b){var c=this;if(this._Event&&"function"==typeof this._Event&&(b=this._Event(a,b)),!this.events||!this.events[a])throw new Error("emit() requires an events property listing the events. this.events["+a+"] = [];");e("EVENT",this)&&console.log(this+".emit()  for event["+a+"]",c.events[a].length),"undefined"!=typeof c.lastEvent&&(c.lastEvent=a),c.events[a].forEach(function(d){if("function"==typeof d){e("EVENT",c)&&console.log(c+".emit()  executing callback for event["+a+"]");try{d(b)}catch(f){var g="Event["+a+"] callback failed with message: "+f.message;throw new Error(g)}}else e("EVENT",c)&&console.log(c+" Emitting, but no callback for event["+a+"]")})},extend:function(a){var b,c;c=Object.create(this);for(b in a)a.hasOwnProperty(b)&&(c[b]=a[b]);return c},_l:function(a){return"function"==typeof e?e(a,this):"unknown"},toString:function(){var a=this._&&this._.objName?this._.objName:this.objName||this.name||"Unknown",b=this._&&this._.id?this._.id:this.id||"Unknown";return a+"["+b+"]"}};a.RtcommBaseObject=o;return b}),function(a,b){"function"==typeof define&&define.amd?define(["./util"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("util")):(a.rtcomm=a.rtcomm||{},a.rtcomm.connection=b(rtcomm.util))}(this,function(a){console.log("lib.rtcomm.clientjs 1.0.0-beta.9 05-01-2015");var b={},c=b,d=new a.Log,e=d.s,f=d.g,g=d.l,h=a.generateUUID,i=a.generateRandomBytes,j=(a.validateConfig,a.applyConfig,a.setConfig),k=function(a){g("TRACE")&&console.log("uidRoute called w/ id "+a);var b={route:null,userid:null},c=a.split(":");if(1===c.length)b.userid=a;else{if(2!==c.length)throw new Error("Unable to process userid: "+a);b.route=c[0],b.userid=c[1]}return g("TRACE")&&console.log("uidRoute returning ",b),b},l=function(a,b){g("TRACE")&&console.log("routeLookup() finding scheme: "+b);var c=null;for(var d in a)if(g("TRACE")&&console.log("routeLookup() searching key: "+d),a.hasOwnProperty(d)&&(g("TRACE")&&console.log("routeLookup() searching key: ",a[d]),"undefined"!=typeof a[d].schemes&&"undefined"!=typeof a[d].topic&&a[d].schemes.indexOf(b)>=0)){c=a[d].topic;break}return g("TRACE")&&console.log("routeLookup() returing topic: "+c),c},m=function(a){function b(a){a=a||!1;var b={},c=5e3,d=function(a){a.timer&&(g("DEBUG")&&console.log(a+" Timer: Clearing existing Timer: "+a.timer+"item.timeout: "+a.timeout),clearTimeout(a.timer));var d=a.timeout||c;a.timer=setTimeout(function(){if(a.id in b){var c=a.objName+" "+a.timer+" Timed out ["+a.id+"] after  "+d+": "+Date();"function"==typeof b[a.id].onFailure?b[a.id].onFailure({reason:c}):g("DEBUG")&&console.log(c),delete b[a.id]}},d),g("DEBUG")&&console.log(a+" Timer: Setting Timer: "+a.timer+"item.timeout: "+d)},e=function(c){g("TRACE")&&console.log("Registry.add() Adding item to registry: ",c),c.on("finished",function(){this.remove(c)}.bind(this)),a&&c.on("timeout_changed",function(){d(c)}.bind(this)),a&&d(c),b[c.id]=c};return{add:e,clear:function(){var a=this;Object.keys(b).forEach(function(c){a.remove(b[c])})},remove:function(a){a.id in b&&(a.timer&&clearTimeout(a.timer),g("DEBUG")&&console.log("EndpointConnection  Removing item from registry: ",a),delete b[a.id])},list:function(){return Object.keys(b)},find:function(a){return b[a]||null}}}var c=function(a){var b=new o(a);return b},d=function(a){var b=this,c=a.topic,d=a.content,e=a.fromEndpointID,f=null;try{f=n.cast(d),g("DEBUG")&&console.log(this+".processMessage() processing Message",f),f.fromEndpointID=e}catch(h){g("DEBUG")&&console.log(this+".processMessage() Unable to cast message, emitting original message",h),g("DEBUG")&&console.log(this+".processMessage() Unable to cast message, emitting original message",a)}if(f&&f.transID)if("RESPONSE"===f.method){g("TRACE")&&console.log(this+".processMessage() this is a RESPONSE",f);var i=b.transactions.find(f.transID);i?(g("TRACE")&&console.log(this+".processMessage() existing transaction: ",i),i.finish(f)):console.error("Transaction ID: ["+f.transID+"] not found, nothing to do with RESPONSE:",f)}else if("START_SESSION"===f.method)b.emit("newsession",b.createSession({message:f,source:c,fromEndpointID:e}));else if("REFER"===f.method){var j=this.createTransaction({message:f,timeout:3e4});b.emit("newsession",b.createSession({message:f,referralTransaction:j,source:c}))}else b.transactions.find(f.transID).emit("message",f);else if(f&&f.sigSessID)b.emit(f.sigSessID,f);else if(a.topic){var k=b.subscriptions;Object.keys(k).forEach(function(b){k[b].regex.test(a.topic)&&(k[b].callback?(g("DEBUG")&&console.log("Emitting Message to listener -> topic "+a.topic),k[b].callback(a)):g("DEBUG")&&console.log("Nothing to do with message, dropping message",a))})}else b.emit("message",a)};this.objName="EndpointConnection",this.events={servicesupdate:[],message:[],newsession:[]},this._={},this._.init=!1,this._.presenceTopic=null,this.ready=!1,this.connected=!1;var e="/rtcomm/",f={required:{server:"string",port:"number"},optional:{credentials:"object",myTopic:"string",rtcommTopicPath:"string",managementTopicName:"string",connectorTopicName:"string",userid:"string",appContext:"string",secure:"boolean",publishPresence:"boolean",presence:"object"},defaults:{rtcommTopicPath:e,managementTopicName:"management",connectorTopicName:"connector",publishPresence:"false",presence:{rootTopic:e+"sphere/",topic:"/"}}};if(!a)throw new Error("EndpointConnection instantiation requires a minimum configuration: "+JSON.stringify(f));this.config=j(a,f),this.id=this.userid=this.config.userid||null;var h={server:this.config.server,port:this.config.port,rtcommTopicPath:this.config.rtcommTopicPath,credentials:this.config.credentials||null,myTopic:this.config.myTopic||null};this.sessions=new b,this.transactions=new b(!0),this.subscriptions={},this.appContext=this.config.appContext||"rtcomm",this.services={RTCOMM_CONNECTOR_SERVICE:{},RTCOMM_CALL_CONTROL_SERVICE:{},RTCOMM_CALL_QUEUE_SERVICE:{},SIP_CONNECTOR_SERVICE:{}},this._.willMessage=null,this.mqttConnection=c(h),this.mqttConnection.on("message",d.bind(this)),this.config.myTopic=this.mqttConnection.config.myTopic,this._.init=!0};m.prototype=a.RtcommBaseObject.extend(function(){var a=function(a){var b=a.replace(/(\/\+)+$/g,"/#");return b},b=function(a){var b=a.replace(/^\$SharedSubscription.+\/\//,"\\/").replace(/\/\+/g,"\\/.+").replace(/\/#$/g,"($|\\/.+$)").replace(/(\\)?\//g,function(a,b){return b?a:"\\/"});return new RegExp("^"+b+"$")},c=function(a,b){a&&(a.RTCOMM_CONNECTOR_SERVICE&&(b.services.RTCOMM_CONNECTOR_SERVICE=a.RTCOMM_CONNECTOR_SERVICE,b.config.connectorTopicName=a.RTCOMM_CONNECTOR_SERVICE.topic||b.config.connectorTopicName),a.RTCOMM_CALL_CONTROL_SERVICE&&(b.services.RTCOMM_CALL_CONTROL_SERVICE=a.RTCOMM_CALL_CONTROL_SERVICE),a.RTCOMM_CALL_QUEUE_SERVICE&&(b.services.RTCOMM_CALL_QUEUE_SERVICE=a.RTCOMM_CALL_QUEUE_SERVICE),a.SIP_CONNECTOR_SERVICE&&(b.services.SIP_CONNECTOR_SERVICE=a.SIP_CONNECTOR_SERVICE))},d=function(){var a="GUEST",b=i("xxxxxx");return a+"-"+b};return{normalizeTopic:function(a,b){if(a){g("TRACE")&&console.log(this+".normalizeTopic topic is: "+a);var c=this.config.rtcommTopicPath;b="boolean"==typeof b?b:!0;var d=b?this.config.userid:"",e=new RegExp("^"+c,"g");a=e.test(a)?a:c+a;var f=new RegExp(d+"$","g");a=f.test(a)?a:a+"/"+d,a=a.replace(/\/+/g,"/")}else{if(!this.config.connectorTopicName)throw new Error("normalize Topic requires connectorTopicName to be set - call serviceQuery?");a=this.normalizeTopic(this.config.connectorTopicName)}return g("TRACE")&&console.log(this+".normalizeTopic returing topic: "+a),a},setLogLevel:function(a){e(a)},getLogLevel:f,createMessage:function(a){var b=n.createMessage(a);return b.hasOwnProperty("fromTopic")&&(b.fromTopic=this.config.myTopic),g("DEBUG")&&console.log(this+".createMessage() returned",b),b},createPresenceDocument:function(a){var b=n.createMessage("DOCUMENT");return b.addressTopic=this.getMyTopic(),b.appContext=this.appContext,a&&(b.state=a.state||b.state,b.alias=a.alias||b.alias,b.userDefines=a.userDefines||b.userDefines),b},publishPresence:function(a){if(!this.config.publishPresence)throw new Error("Cannot publish presence if publishPresence != true upon connection creation");return this.publish(this.getMyPresenceTopic(),a,!0),this},createResponse:function(a){var b=n.createResponse(a);return b},createTransaction:function(a,b,c){if(!this.connected)throw new Error("not Ready -- call connect() first");var d=new q(a,b,c);return d.endpointconnector=this,g("DEBUG")&&console.log(this+".createTransaction() Transaction created: ",d),this.transactions.add(d),d},createSession:function(a){if(!this.connected)throw new Error("not Ready -- call connect() first");a&&a.remoteEndpointID&&(a.toTopic=this.normalizeTopic(l(this.services,k(a.remoteEndpointID).route)));var b=new p(a);return b.endpointconnector=this,this.createEvent(b.id),this.on(b.id,b.processMessage.bind(b)),this.sessions.add(b),b.on("failed",function(){this.sessions.remove(b)}.bind(this)),b},_query:function(a,b,c,d){var e=b||"payload",f=function(a){if(c&&"function"==typeof c){if(a){var b=a[e]||null;c(b)}}else g("DEBUG")&&console.log("query returned: ",a)},h=function(a){d&&"function"==typeof d?a&&a.failureReason&&d(a.failureReason):console.error("query failed:",a)};if(this.connected){var i=this.createTransaction({message:a,toTopic:this.config.managementTopicName},f,h);i.start()}else console.error(this+"._query(): not Ready!")},connect:function(a,b){if(g("DEBUG")&&console.log(this+".connect() LWT topic: "+this.getMyPresenceTopic()+" message",this.getLwtMessage()),a="function"==typeof a?a:function(a){g("DEBUG")&&console.log("Success - specify a callback for more information",a)},b="function"==typeof b?b:function(a){console.error("EndpointConnection.connect() failed - specify a callback for more information",a)},!this._.init)throw new Error("not initialized -- call init() first");if(this.connected)throw new Error(this+".connect() is already connected!");var c=function(b){this.connected=!0,g("DEBUG")&&console.log("EndpointConnection.connect() Success, calling callback - service:",b),a(b)},d=function(a){this.connected=!1,b(a)},e={onSuccess:c.bind(this),onFailure:d.bind(this)};this.config.publishPresence&&(e.willMessage=this.getLwtMessage(),e.presenceTopic=this.getMyPresenceTopic()),this.mqttConnection.connect(e)},disconnect:function(){g("DEBUG")&&console.log("EndpointConnection.disconnect() called: ",this.mqttConnection),g("DEBUG")&&console.log(this+".disconnect() publishing LWT"),this.publish(this.getMyPresenceTopic(),this.getLwtMessage(),!0),this.sessions.clear(),this.transactions.clear(),this.clearEventListeners(),this.mqttConnection.destroy(),this.mqttConnection=null,this.connected=!1,this.ready=!1},serviceQuery:function(a,b){var d=this;if(a=a||function(a){g("DEBUG")&&console.log(this+".serviceQuery() Default Success message, use callback to process:",a)},b=b||function(a){g("DEBUG")&&console.log(this+".serviceQuery() Default Failure message, use callback to process:",a)},!this.id)return void b("servicQuery requires a userid to be set");if(this.connected){var e=this.createMessage("SERVICE_QUERY");this._query(e,"services",function(b){c(b,d),d.ready=!0,d.emit("servicesupdate",b),a(b)},b)}else console.error("Unable to execute service query, not connected")},subscribe:function(c,d){var e=b(a(c));return this.subscriptions[e]={regex:e,callback:d},this.mqttConnection.subscribe(c),e},unsubscribe:function(c){var d=b(a(c));this.mqttConnection.unsubscribe(c)&&delete this.subscriptions[d]},publish:function(a,b,c){this.mqttConnection.publish(a,b,c)},destroy:function(){g("DEBUG")&&console.log(this+".destroy() Destroying the connection"),this.disconnect()},send:function(a){if(!this.connected)throw new Error("not Ready -- call connect() first");if(a){var b=this.normalizeTopic(a.toTopic);this.mqttConnection.send({message:a.message,toTopic:b})}else console.error("EndpointConnection.send() Nothing to send")},getMyTopic:function(){return this.config.myTopic},setUserID:function(a){return a=a||d(),g("DEBUG")&&console.log(this+".setUserID id is "+a),null===this.id||/^GUEST/.test(this.id)?(this.id=this.userid=this.config.userid=a,a):this.id===a?(g("DEBUG")&&console.log(this+".setUserID() already set to same value: "+a),a):(console.error(this+".setUserID() ID already set, cannot be changed: "+this.id),a)},getUserID:function(){return this.config.userid},getLwtMessage:function(){return this._.willMessage=this._.willMessage||"",this._.willMessage},getMyPresenceTopic:function(){return this._.presenceTopic=this._.presenceTopic||this.normalizeTopic(this.config.presence.rootTopic+this.config.presence.topic,!0),g("DEBUG")&&console.log(this+".getMyPresenceTopic() returning topic: "+this._.presenceTopic),this._.presenceTopic},getPresenceRoot:function(){return g("DEBUG")&&console.log(this+".getPresenceRoot() returning topic: "+this.normalizeTopic(this.config.presence.rootTopic,!1)),this.normalizeTopic(this.config.presence.rootTopic,!1)},useLwt:function(){return this.services.RTCOMM_CONNECTOR_SERVICE.sphereTopic?!0:!1}}}()),b.EndpointConnection=m;var n=function(){function a(a){var b={};return c(b,h),j.hasOwnProperty(a)?(c(b,j[a]),b):(console.error("Message Type: "+a+" Not found!"),null)}function b(a){var b={};return c(b,h),c(b,k.RESPONSE),l.hasOwnProperty(a)?(c(b,l[a]),b):(console.error("Message Type: "+a+" Not found!"),null)}function c(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c])}function d(a){var c=null,d=b(a);if(!d)throw new TypeError("Invalid Message type:"+a+", should be one of: "+Object.keys(j));return c=new m(d)}function e(b){b=b||"MESSAGE";var c=null,d=a(b);if(!d)throw new TypeError("Invalid Message type:"+b+", should be one of: "+Object.keys(j));return c=new m(d)}function f(c){if(g("TRACE")&&console.log("MessageFactory.cast() Attempting to cast message: ",c),"string"==typeof c){g("TRACE")&&console.log("MessageFactory.cast() It is a string... ",c);try{c=JSON.parse(c)}catch(d){throw new TypeError("Unable to cast object as a SigMessage")}g("TRACE")&&console.log("MessageFactory.cast() After JSON.parse... ",c)}var e=null;if(!c.method)throw new TypeError("Unable to cast object as a SigMessage");e="RESPONSE"===c.method?b(c.orig):a(c.method);var f=new m(e);for(var h in c)e.hasOwnProperty(h)||i.hasOwnProperty(h)?f[h]=c[h]:g("DEBUG")&&console.log("MessageFactory.cast() dropped header: "+h);return g("TRACE")&&console.log("MessageFactory.cast() returning casted message:",f),f}var h={rtcommVer:"v0.3.0",method:null,fromTopic:null},i={sigSessID:null,transID:null,reason:null,toEndpointID:null,appContext:null,holdTimeout:null,queuePosition:null},j={SERVICE_QUERY:{method:"SERVICE_QUERY",transID:null},START_SESSION:{method:"START_SESSION",protocols:[],sigSessID:null,transID:null,toEndpointID:null,payload:null},REFER:{method:"REFER",transID:null,toEndpointID:null,details:null},STOP_SESSION:{method:"STOP_SESSION",sigSessID:null,payload:null},PRANSWER:{method:"PRANSWER",protocols:[],payload:null},MESSAGE:{method:"MESSAGE",payload:null},DOCUMENT:{method:"DOCUMENT",type:"ENDPOINT",addressTopic:null,appContext:null,state:null,alias:null,userDefines:[]}},k={RESPONSE:{method:"RESPONSE",orig:null,transID:null,result:null}},l={SERVICE_QUERY:{orig:"SERVICE_QUERY",services:null},START_SESSION:{orig:"START_SESSION",protocols:[],sigSessID:null,result:null,payload:null,transID:null},REFER:{orig:"REFER",transID:null,result:null}},m=function(a){if(a)for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b])};return m.prototype={toJSON:function(){var a={};for(var b in this)this.hasOwnProperty(b)&&(a[b]=this[b]);return a},toString:function(){return JSON.stringify(this.toJSON())}},{createMessage:e,createResponse:d,cast:f}}();b.MessageFactory=n;var o=function(a){var b=function(){for(var a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",b=23,c="",d=b-1;d>0;--d)c+=a[Math.floor(Math.random()*(a.length-1))];return c},c=function(a){var b=null;if("object"!=typeof Paho.MQTT)throw new Error("MqttConnection depends on 'Paho.MQTT' being loaded via mqttws31.js.");return g("DEBUG")&&console.log("MqttConnection createMqttClient using config: ",a),b=new Paho.MQTT.Client(a.server,a.port,a.clientID),b.onConnectionLost=function(a){0!==a.errorCode&&console.error("MqttConnection: Connection Lost... : ",a)},b},d=function(a,b){var c={content:"",fromEndpointID:"",topic:""};c.content=a.payloadString;var d=a.destinationName.split("/");c.fromEndpointID=d[d.length-1];var e=new RegExp(b);return c.topic=e.test(a.destinationName)?null:a.destinationName,c};this.objName="MqttConnection",this.dependencies={},this.config={},this.ready=!1,this._init=!1,this.id=null,this.events={message:[]};var e={required:{server:"string",port:"number",rtcommTopicPath:"string"},optional:{credentials:"object",myTopic:"string",defaultTopic:"string"}};if(!a)throw new Error("MqttConnection instantiation requires a minimum configuration: "+JSON.stringify(e.required));this.config=j(a,e),this.config.clientID=this.config.myTopic||b(),this.config.myTopic=this.config.myTopic||this.config.rtcommTopicPath+this.config.clientID,this.config.presenceTopic=this.config.presenceTopic||null,this.config.destinationTopic=this.config.defaultTopic?this.config.rtcommTopicPath+this.config.defaultTopic:"",this.id=this.config.clientID,this.ready=!1;var f=this.dependencies.mqttClient=c(this.config);f.onMessageArrived=function(a){g("TRACE")&&console.log("MQTT Raw message, ",a);var b=d(a,this.config.myTopic);try{g("MESSAGE")&&console.log(this+" Received message: "+JSON.stringify(b)),this.emit("message",b)}catch(c){console.error("onMessageArrived callback chain failure:",c)}}.bind(this),this._init=!0};o.prototype=a.RtcommBaseObject.extend(function(){var b=function(a){g("TRACE")&&console.log("MqttConnection: >>>>>>>>>>>> Creating message > ",a);var b=null;return b=new Paho.MQTT.Message(a&&"object"==typeof a?JSON.stringify(a):"string"==typeof a?a:""),g("TRACE")&&console.log("MqttConnection: >>>>>>>>>>>> Created message > ",b),b};return{setLogLevel:e,getLogLevel:f,connect:function(a){if(!this._init)throw new Error("init() must be called before calling connect()");var c=this.dependencies.mqttClient,d=null,e=null,f=null,h=null;g("DEBUG")&&console.log(this+".connect() called with options: ",a),a&&(d=a.onSuccess||null,e=a.onFailure||null,f=a.willMessage||null,h=a.presenceTopic||null);var i={};this.config.credentials&&this.config.credentials.userName&&(i.userName=this.config.credentials.userName,this.config.credentials.password&&(i.password=this.config.credentials.password)),h&&(i.willMessage=b(f),i.willMessage.destinationName=h,i.willMessage.retained=!0);var j=d||function(){g("DEBUG")&&console.log(this+".connect() was successful, override for more information")}.bind(this),k=e||function(a){g("DEBUG")&&console.log(this+".connect() failed, override for more information",a)}.bind(this);i.onSuccess=function(){g("DEBUG")&&console.log(this+"mqtt.onSuccess called",c),g("DEBUG")&&console.log(this+"subscribing to: "+this.config.myTopic+"/#");try{c.subscribe(this.config.myTopic+"/#")}catch(a){return void console.error("mqttConnectOptions.onSuccess Subscribe failed: ",a)}if(this.ready=!0,j&&"function"==typeof j)try{j(this)}catch(a){console.error("connect onSuccess Chain Failure... ",a)}else console.log("No onSuccess callback... ",j)}.bind(this),i.onFailure=function(a){if(g("DEBUG")&&console.log(this+".onFailure: MqttConnection.connect.onFailure - Connection Failed... ",a),"function"==typeof k)try{this.ready&&k(a)}catch(b){console.error(b)}else console.error(a)}.bind(this),c.connect(i)},subscribe:function(a){return a?(this.dependencies.mqttClient.subscribe(a),!0):!1},unsubscribe:function(a){return a?(this.dependencies.mqttClient.unsubscribe(a),!0):!1},publish:function(a,c,d){g("DEBUG")&&console.log(this+".publish() Publishing message",c),g("DEBUG")&&console.log(this+".publish() To Topic: "+a),g("DEBUG")&&console.log(this+".publish() retained?: "+d);var e=b(c);e?(e.destinationName=a,e.retained="boolean"==typeof d?d:!1,this.dependencies.mqttClient.send(e)):g("INFO")&&console.error(this+".publish(): invalid message ")},send:function(c){if(!this.ready)throw new Error("connect() must be called before calling init()");var d=c.message,e=c.toTopic,f=c.onSuccess||function(){g("DEBUG")&&console.log(this+".send was successful, override for more information")}.bind(this),h=(c.onFailure||function(a){g("DEBUG")&&console.log(this+".send failed, override for more information",a)}.bind(this),b(d)),i=this.dependencies.mqttClient;g("TRACE")&&console.log(this+".send using toTopic: "+e),h?(h.destinationName=e,a.whenTrue(function(){return this.ready}.bind(this),function(a){if(a){if(g("MESSAGE")&&console.log(this+".send() Sent message["+e+"]:",d),i.send(h),"function"==typeof f)try{f(null)}catch(b){console.error("An error was thrown in the onSuccess callback chain",b)}}else console.error("MqttConnection.send() failed - Timeout waiting for connect()")}.bind(this),1e3)):g("DEBUG")&&console.log(this+".send(): Nothing to send")},destroy:function(){this.ready=!1,this.dependencies.mqttClient.disconnect(),this.dependencies.mqttClient=null,g("DEBUG")&&console.log(this+".destroy() called and finished")},setDefaultTopic:function(a){this.config.defaultTopic=a;var b=new RegExp("^"+this.config.rtcommTopicPath);this.config.destinationTopic=b.test(a)?this.config.defaultTopic:this.config.rtcommTopicPath+this.config.defaultTopic}}}()),b.MqttConnection=o;var p=function(a){this.objName="SigSession",this.endpointconnector=null,this.id=null,this.remoteEndpointID=null,this.message=null,this.source=null,this.protocols=[],this.toTopic=null,this.type="normal",this.referralDetails=null,this.referralTransaction=null,this.appContext=null,a&&(a.message?(this.appContext=a.message.appContext||null,this.source=a.source||null,"START_SESSION"===a.message.method?(g("DEBUG")&&console.log(this+".constructor - inbound message(START_SESSION) config: ",a),this.message=a.message,this.id=a.message.sigSessID,this.remoteEndpointID=a.fromEndpointID||null,this.toTopic=a.toTopic||a.message.fromTopic||null,this.protocols=a.message.protocols):"REFER"===a.message.method?(g("DEBUG")&&console.log(this+".constructor - inbound message(REFER) config: ",a),this.id=a.message.details.sessionID&&a.message.details.sessionID,this.remoteEndpointID=a.message.details.toEndpointID||null,this.referralTransaction=a.referralTransaction):g("DEBUG")&&console.log(this+".constructor - inbound message(unknown) doing nothing -->  config: ",a)):(g("DEBUG")&&console.log(this+".constructor creating session from config: ",a),this.remoteEndpointID=a.remoteEndpointID||null,this.id=this.id||a.id,this.protocols=a.protocols||this.protocols,this.toTopic=this.toTopic||a.toTopic,this.appContext=this.appContext||a.appContext)),this.id=this.id||h(),g("DEBUG")&&console.log(this+".constructor creating session from config: ",a),this.events={starting:[],started:[],failed:[],stopped:[],message:[],queued:[],ice_candidate:[],have_pranswer:[],pranswer:[],finished:[]},this.state="stopped",this.initialTimeout=5e3,this.finalTimeout=3e4};p.prototype=a.RtcommBaseObject.extend(function(){return{_setupQueue:function(){this._messageQueue={messages:[],processing:!1},this.on("started",this._processQueue.bind(this)),this.on("have_pranswer",this._processQueue.bind(this)),this.on("pranswer",this._processQueue.bind(this))},_processQueue:function(){var a=this._messageQueue.messages,b=this._messageQueue.processing;b||(b=!0,g("DEBUG")&&console.log(this+"._processQueue processing queue... ",a),a.forEach(function(a){this.send(a)}.bind(this)),a=[],b=!1)},start:function(a){if(this._startTransaction)return void(g("DEBUG")&&console.log("SigSession.start() already started/starting"));this._setupQueue(),g("DEBUG")&&console.log("SigSession.start() using config: ",a);var b=this.remoteEndpointID,c=null;if(a&&(this.remoteEndpointID=b=a.remoteEndpointID||b,this.protocols=a.protocols&&a.protocols.length>0?a.protocols:this.protocols,c=a.payload||null),this.state="starting",!b)throw new Error("remoteEndpointID is required in start() or SigSession() instantiation");this.message||(this.message=this.createMessage("START_SESSION",c),this.appContext&&(this.message.appContext=this.appContext));var d=function(a){g("DEBUG")&&console.log(this+".sessionStarted!  ",a),this.state="started",a.fromEndpointID!==this.remoteEndpointID&&(g("DEBUG")&&console.log(this+".sessionStarted! remoteEndpointID reset:"+a.fromEndpointID),this.remoteEndpointID=a.fromEndpointID),this._startTransaction=null,this.referralTransaction&&this.referralTransaction.finish(this.endpointconnector.createResponse("REFER")),this.emit("started",a.payload)},e=function(a){this._startTransaction=null;var b=a&&a.reason?a.reason:"Session Start failed for unknown reason";this.state="stopped",console.error("Session Start Failed: ",b),this.emit("failed",b)};return this._startTransaction=this.endpointconnector.createTransaction({message:this.message,timeout:this.initialTimeout},d.bind(this),e.bind(this)),this._startTransaction.toTopic=this.toTopic||null,this._startTransaction.on("message",this.processMessage.bind(this)),this._startTransaction.on("finished",function(){this._startTransaction=null}.bind(this)),this._startTransaction.start(),this},respond:function(a,b){a&&"boolean"!=typeof a&&(b=a,a=!0),a="undefined"!=typeof a?a:!0,g("DEBUG")&&console.log(this+".respond() Respond called with SUCCESS",a),g("DEBUG")&&console.log(this+".respond() Respond called with message",b),g("DEBUG")&&console.log(this+".respond() Respond called using this",this);var c=null;if(this._startTransaction){c=this.endpointconnector.createResponse("START_SESSION"),c.transID=this._startTransaction.id,c.sigSessID=this.id;var d=this.endpointconnector.createResponse("REFER");a?(c.result="SUCCESS",c.payload=b,this.state="started"):(c.result="FAILURE",c.reason=b||"Unknown",d.result="FAILURE",d.reason=b||"Unknown",this.state="failed"),this.referralTransaction&&this.referralTransaction.finish(d),this._startTransaction.finish(c),this.emit(this.state)}else console.log("NO TRANSACTION TO RESPOND TO.")},fail:function(a){this.start(),this.respond(!1,a)},pranswer:function(a,b){"number"==typeof a&&(b=a,a=null);var c=this.createMessage("PRANSWER",a);b&&(c.holdTimeout=b),this.state="pranswer",this.send(c,1e3*b||this.finalTimeout),this.emit("pranswer")},stop:function(){var a=this.createMessage("STOP_SESSION");g("DEBUG")&&console.log(this+".stop() stopping...",a),this.endpointconnector.send({message:a,toTopic:this.toTopic}),this.state="stopped",this.emit("stopped"),this.emit("finished")},send:function(a,b){var c=null;c=a&&a.rtcommVer&&a.method?a:this.createMessage(a);var d=this._startTransaction||null,e=!("started"===this.state||"have_pranswer"===this.state||"pranswer"===this.state);e&&"MESSAGE"===c.method?(g("DEBUG")&&console.log(this+".send() Queueing message: ",c),this._messageQueue.messages.push(c)):d?(g("DEBUG")&&console.log(this+".send() Sending using transaction["+d.id+"]",c),b&&d.setTimeout(b),d.send(c)):(g("DEBUG")&&console.log(this+".send() Sending... ["+this.state+"]",c),c.hasOwnProperty("transID")&&delete c.transID,this.endpointconnector.send({message:c,toTopic:this.toTopic}))},createMessage:function(a,b){"object"==typeof a&&(b=a,a="MESSAGE");var c=this.endpointconnector.createMessage(a);return c.toEndpointID=this.remoteEndpointID,c.sigSessID=this.id,c.protocols=this.protocols,b&&b.type&&b.content&&(c.payload=b),c},getState:function(){return this.state},processMessage:function(a){switch(g("DEBUG")&&console.log(this+".processMessage() received message: ",a),this.toTopic=a.fromTopic!==this.toTopic?a.fromTopic:this.toTopic,a.method){case"PRANSWER":g("TRACE")&&console.log("PRANSWER --> "+a.holdTimeout+"="+("undefined"==typeof a.holdTimeout)+" - "+this.finalTimeout);var b="undefined"==typeof a.holdTimeout?this.finalTimeout:1e3*a.holdTimeout;g("TRACE")&&console.log("PRANSWER, resetting timeout to :",b),this._startTransaction&&this._startTransaction.setTimeout(b),a.holdTimeout||a.queuePosition?(this.state="queued",this.emit("queued",{queuePosition:a.queuePosition,message:a.payload})):(this.state="have_pranswer",this.protocols=a.protocols,this.emit("have_pranswer",{protocols:this.protocols,payload:a.payload}));
break;case"ICE_CANDIDATE":this.emit("ice_candidate",a.payload);break;case"STOP_SESSION":this.state="stopped",this.emit("stopped",a.payload),this.emit("finished");break;case"MESSAGE":g("DEBUG")&&console.log("Emitting event [message]",a.payload),this.emit("message",a.payload);break;default:console.error("Unexpected Message, dropping... ",a)}}}}());var q=function(a,b,c){var d,e,f;this.defaultTimeout=5e3,a&&(d=a.message||null,e=a.timeout||null,f=a.toTopic||null),this.objName="Transaction",this.events={message:[],timeout_changed:[],finished:[]},this.timeout=e||this.defaultTimeout,this.outbound=d&&d.transID?!1:!0,this.id=d&&d.transID?d.transID:h(),this.method=d&&d.method?d.method:"UNKNOWN",this.toTopic=f,this.message=d,this.onSuccess=b||function(a){console.log(this+" Response for Transaction received, requires callback for more information:",a)},this.onFailure=c||function(a){console.log(this+" Transaction failed, requires callback for more information:",a)},g("DEBUG")&&console.log(this+".constructor Are we outbound?",this.outbound)};return q.prototype=a.RtcommBaseObject.extend({setTimeout:function(a){this.timeout=a||this.defaultTimeout,this.emit("timeout_changed",this.timeout)},getInbound:function(){return!this.outbound},start:function(){g("TRACE")&&console.log(this+".start() Starting Transaction for ID: "+this.id),this.outbound?(this.message.transID=this.id,this.send(this.message)):g("TRACE")&&console.log(this+".start() Inbound Transaction ")},send:function(a){g("TRACE")&&console.log(this+".send() sending message: "+a),a?(a.transID=a.transID||this.id,g("DEBUG")&&console.log("Transaction.send() ids..."+a.transID+" this.id "+this.id+"toTopic: "+this.toTopic),a.transID===this.id?this.endpointconnector.send({message:a,toTopic:this.toTopic}):g("DEBUG")&&console.log(this+".send() Message is not part of our tranaction, dropping!",a)):console.error("Transaction.send() requires a message to be passed")},finish:function(a){g("DEBUG")&&console.log(this+".finish() Finishing transction with message:",a),a.transID=a.transID||this.id,this.id===a.transID&&"RESPONSE"===a.method&&this.method===a.orig?(this.outbound?"SUCCESS"===a.result&&this.onSuccess?this.onSuccess(a):"FAILURE"===a.result&&this.onFailure?this.onFailure(a):console.error("Unknown result for RESPONSE:",a):this.send(a),this.emit("finished")):console.error("Message not for this transaction: ",a)}}),c}),function(a,b){"function"==typeof define&&define.amd?define(["./rtcomm/connection","./rtcomm/util"],function(c,d){return a.returnExportsGlobal=b(c,d)}):"object"==typeof exports?module.exports=b(require("./rtcomm/connection"),require("./rtcomm/util")):(a.rtcomm=a.rtcomm||{},a.rtcomm.EndpointProvider=b(rtcomm.connection,rtcomm.util))}(this,function(a,b){console.log("lib.rtcomm.clientjs 1.0.0-beta.9 05-01-2015");var c=function(a){this.config={protocols:a||null},this.dependencies={endpointConnection:null},this._={referralSession:null,activeSession:null,appContext:null,available:!0},a&&Object.keys(a).forEach(function(b){this.config[b]=a[b]})};c.prototype=b.RtcommBaseObject.extend(function(){function a(a,b){i("DEBUG")&&console.log("createSignalingSession context: ",b);var c=null,d=null;if(b._.referralSession){var e=b._.referralSession.referralDetails;c=e&&e.sessionID?e.sessionID:null,a=e&&e.remoteEndpointID?e.remoteEndpointID:null,d=e&&e.toTopic?e.toTopic:null}if(!a)throw new Error("toEndpointID must be set");var f=b.dependencies.endpointConnection.createSession({id:c,toTopic:d,remoteEndpointID:a,appContext:b._.appContext});return console.log("session: ",f),f}return{getAppContext:function(){return this._.appContext},newSession:function(a){var b=null,c=null;this.ignoreAppContext||a.appContext&&a.appContext===this.getAppContext()||"undefined"==typeof a.appContext&&"refer"===a.type?this.available()?(b="incoming","refer"===a.type&&(i("DEBUG")&&console.log(this+".newSession() REFER"),b="refer"),this._.activeSession=a,a.start(),a.message&&a.message.peerContent?(a.pranswer(),console.log("Should send message now to someone else...")):a.respond(),this.available(!1)):(c="Busy",i("DEBUG")&&console.log(this+".newSession() "+c),a.fail("Busy")):(c="Client is unable to accept a mismatched appContext: ("+a.appContext+") <> ("+this.getAppContext()+")",i("DEBUG")&&console.log(this+".newSession() "+c),a.fail(c))},available:function(a){return a?"boolean"==typeof a?(this._.available=a,a):void 0:this._.available},connect:function(b){this._.activeSession=a(b,this),this._.activeSession.start()},disconnect:function(){this._.activeSession.stop()},reject:function(){}}}());var d=function(){var c="RtcommEndpointProvider Missing Dependency: ";if(!b)throw new Error(c+"rtcomm.util");if(!a)throw new Error(c+"rtcomm.connection");this.config={},this.dependencies={},this._={},this._.queues=new r,this._.services=null,this._.endpointRegistry=new e,this._.presenceMonitor=null,this._.objName="EndpointProvider",this._.rtcommEndpointConfig={},this.ready=!1,this.events={newendpoint:[],queueupdate:[]},this.init=function(a,c,e){if(this.ready)return i("INFO")&&console.log("EndpointProvider.init() has been called and the object is READY"),this;var f=null,g="/rtcomm/",h={required:{server:"string",port:"number"},optional:{credentials:"object",rtcommTopicPath:"string",managementTopicName:"string",presence:"object",userid:"string",createEndpoint:"boolean",appContext:"string"},defaults:{rtcommTopicPath:g,managementTopicName:"management",presence:{rootTopic:"sphere/",topic:"/"},appContext:"rtcomm",port:1883,createEndpoint:!1}};if(!a)throw new Error("EndpointProvider initialization requires a minimum configuration: "+JSON.stringify(h.required));{var j=this.config&&this.config.appContext?this.config.appContext:null,k=this.config&&this.config.userid?this.config.userid:null;this.config&&this.config.presence?this.config.presence:null}f=this.config=l(a,h),this.config.appContext=j||this.config.appContext,this.setUserID(k||this.config.userid);var m=this;c=c||function(a){console.log(m+".init() Default Success message, use callback to process:",a)},e=e||function(a){console.log(m+".init() Default Failure message, use callback to process:",a)},i("DEBUG")&&console.log(this+".init() Using config ",f);var n=b.makeCopy(f);n.hasOwnProperty("createEndpoint")&&delete n.createEndpoint,n.publishPresence=!0;var o=this.dependencies.endpointConnection=d.call(this,n),p=function(){i("DEBUG")&&console.log(m+".onSuccess() called ");var a={ready:!0,endpoint:null,registered:!1};this.ready=!0,f.createEndpoint&&(a.endpoint=m.createRtcommEndpoint()),f.userid&&(i("DEBUG")&&console.log(m+".init() publishing presence: "+f.userid+"|"+f.appContext),m.publishPresence(),m.setUserID(f.userid),a.registered=!0),m.setUserID(f.userid),o.serviceQuery(),c(a)},q=function(a){this.ready=!1,e(a)};return o.connect(p.bind(this),q.bind(this)),this},this.stop=this.destroy,this.start=this.init;var d=function(b){var c=this,d=new a.EndpointConnection(b);return this._.endpointRegistry.length()>0&&this._.endpointRegistry.list().forEach(function(a){a.setEndpointConnection(d)}),this._.presenceMonitor&&this._.presenceMonitor.setEndpointConnection(d),d.setLogLevel(h()),d.on("servicesupdate",function(a){c._.services=a,c.updateQueues()}),d.on("newsession",function(a){if(a){i("DEBUG")&&console.log(c+"-on.newsession Handle a new incoming session: ",a),i("DEBUG")&&console.log(c+"-on.newsession endpointRegistry: ",c._.endpointRegistry.list());var b=c._.endpointRegistry.getOneAvailable();if(b)i("DEBUG")&&console.log(c+"-on.newsession giving session to Existing Endpoint: ",b),b.newSession(a);else if(c.hasEventListener("newendpoint"))b=c.getRtcommEndpoint(),i("DEBUG")&&console.log(c+"-on.newsession Created a NEW endpoint for session: ",b),b.newSession(a),c.emit("newendpoint",b);else{var d=c._.endpointRegistry.list();d.length>1?(a.start(),a.fail("Unable to accept inbound call: Busy"),console.error(c+"-on.newsession - Rejecting session, ambiguous enpdoint selection; add newendpoint callback? ")):d[0].newSession(a)}}else console.error(c+"-on.newsession - expected a session object to be passed.")}),d.on("message",function(a){a&&console.log("TODO:  Handle an incoming message ",a)}),d};this.setRtcommEndpointConfig=function(a){this._.rtcommEndpointConfig=b.combineObjects(a,this._.rtcommEndpointConfig)},this.getRtcommEndpoint=function(a){var b=this,c=null,d=null,e={chat:!0,webrtc:!0,parent:this},f=e;if(this._.rtcommEndpointConfig&&(f.chat="boolean"==typeof this._.rtcommEndpointConfig.chat?this._.rtcommEndpointConfig.chat:f.chat,f.webrtc="boolean"==typeof this._.rtcommEndpointConfig.webrtc?this._.rtcommEndpointConfig.webrtc:f.webrtc),"undefined"==typeof this.config.appContext)throw new Error("Unable to create an Endpoint without appContext set on EndpointProvider");return a&&"object"!=typeof a?(c=a,i("DEBUG")&&console.log(this+".getRtcommEndpoint() Looking for endpoint: "+c),d=this._.endpointRegistry.get(c)[0],i("DEBUG")&&console.log(this+".getRtcommEndpoint() found endpoint: ",d)):(k(a,f),f.appContext=this.config.appContext,f.userid=this.config.userid,i("DEBUG")&&console.log(this+".getRtcommEndpoint using config: ",f),d=new s(f),this.dependencies.endpointConnection&&d.setEndpointConnection(this.dependencies.endpointConnection),d.on("destroyed",function(a){b._.endpointRegistry.remove(a.endpoint)}),this._.rtcommEndpointConfig&&Object.keys(this._.rtcommEndpointConfig).forEach(function(a){try{"function"==typeof b._.rtcommEndpointConfig[a]&&d.on(a,b._.rtcommEndpointConfig[a])}catch(c){console.error(c),console.error("Invalid event in rtcommEndpointConfig: "+a)}}),this._.rtcommEndpointConfig.broadcast&&d.webrtc&&d.webrtc.setBroadcast(this._.rtcommEndpointConfig.broadcast),d=this._.endpointRegistry.add(d),i("DEBUG")&&console.log("ENDPOINT REGISTRY: ",this._.endpointRegistry.list())),d},this.createRtcommEndpoint=this.getRtcommEndpoint,this.getMqttEndpoint=function(){return new m({connection:this.dependencies.endpointConnection})},this.getPresenceMonitor=function(a){return this._.presenceMonitor=this._.presenceMonitor||new q({connection:this.dependencies.endpointConnection}),this.ready&&a&&this._.presenceMonitor.add(a),this._.presenceMonitor},this.destroy=function(){this.leaveAllQueues(),this.clearEventListeners(),this._.endpointRegistry.destroy(),this._.presenceMonitor&&this._.presenceMonitor.destroy(),this._.presenceMonitor=null,i("DEBUG")&&console.log(this+".destroy() Finished cleanup of endpointRegistry"),this.dependencies.endpointConnection&&this.dependencies.endpointConnection.destroy(),this.dependencies.endpointConnection=null,i("DEBUG")&&console.log(this+".destroy() Finished cleanup of endpointConnection"),this.ready=!1},this.setAppContext=function(a){if(this.ready)throw new Error("Cannot change appContext once inited, using appContext: ",this.config.appContext);return i("DEBUG")&&console.log(this+".setAppContext() Setting appContext to: "+a),this.config.appContext=a,this},this.setUserID=function(a){if(this.config.userid&&a!==this.config.userid&&!/^GUEST/.test(this.config.userid))throw i("DEBUG")&&console.error(this.config.userid+"!== "+a),new Error("Cannot change UserID once it is set");return i("DEBUG")&&console.log(this+".setUserID() called with: "+a),a=this.getEndpointConnection()?this.getEndpointConnection().setUserID(a):a,i("DEBUG")&&console.log(this+".setUserID() Set userid to: "+a),this.config.userid=this._.id=a,this._.endpointRegistry.list().forEach(function(b){b.setUserID(a)}),i("DEBUG")&&console.log(this+".setUserID() Set userid to: "+a),this},this.publishPresence=function(a){var b={available:"available",unavailable:"unavailable",busy:"busy"},c=a&&a.state?b[a.state.trim()]||"available":"available";a=a||{},a.state=c;var d=this.getEndpointConnection().createPresenceDocument(a);return this.getEndpointConnection().publishPresence(d),this},this.updateQueues=function(){this._.queues.add(this._.services&&this._.services.RTCOMM_CALL_QUEUE_SERVICE&&this._.services.RTCOMM_CALL_QUEUE_SERVICE.queues||[]),this.emit("queueupdate",this._.queues.all()),i("DEBUG")&&console.log(this+".updateQueues() QUEUES: ",this._.queues.list())},this.joinQueue=function(a,b){var c=this._.queues.get(a);if(i("DEBUG")&&console.log(this+".joinQueue() Looking for queueid:"+a),c)return c.active=!0,c.callback=null,c.autoPause=b&&b.autoPause||!1,c.regex=this.dependencies.endpointConnection.subscribe(c.topic),!0;throw new Error("Unable to find queue("+a+") available queues: "+this._.queues.list())},this.leaveQueue=function(a){var b=this._.queues.get(a);return b&&!b.active?(i("DEBUG")&&console.log(this+".leaveQueue() - Not Active,  cannot leave."),!0):b?(b.active=!1,this.dependencies.endpointConnection.unsubscribe(b.topic),i("DEBUG")&&console.log(this+".leaveQueue() left queue: "+a),!0):(console.error(this+".leaveQueue() Queue not found: "+a),!1)},this.leaveAllQueues=function(){var a=this;this.listQueues().forEach(function(b){a.leaveQueue(b)})},this.getAllQueues=function(){return this._.queues.all()},this.listQueues=function(){return this._.queues.list()},this.getUserID=function(){return this.config.userid},this.getEndpointConnection=function(){return this.dependencies.endpointConnection},this.setLogLevel=g,this.getLogLevel=h,this.endpoints=function(){return this._.endpointRegistry.list()},this.currentState=function(){return{ready:this.ready,events:this.events,dependencies:this.dependencies,"private":this._,config:this.config,queues:this.getAllQueues(),endpointRegistry:this._.endpointRegistry.list()}}};d.prototype=b.RtcommBaseObject.extend({});var e=function(a){function b(a){var b=[];return b=a?d("id",a):this.list()}function c(){var a=[];return this.list().forEach(function(b){console.log("REMOVE ME: checking item: ",b),console.log("REMOVE ME: available? "+b.available()),b.available()&&a.push(b)}),console.log("REMOVE ME: Found: ",a),a.length>0?a[a.length-1]:null}function d(a,b){if(m.indexOf(a)>-1){var c=[];switch(a){case"appContext":l.hasOwnProperty(b)&&Object.keys(l[b]).forEach(function(a){c.push(l[b][a])});break;case"id":Object.keys(l).forEach(function(a){l[a].hasOwnProperty(b)&&c.push(l[a][b])});break;default:this.list().forEach(function(d){d.hasOwnProperty(a)&&d[a]===b&&c.push(d)})}return c}return i("DEBUG")&&console.log("EndpointRegistry.findByProperty "+a+" not valid "),[]}function e(a){var b=null,c=null;if(a){if(m=Object.keys(a),b=a.appContext,c=a.id,l.hasOwnProperty(b)){var d=Object.keys(l[b]);return 1===d.length&&k?(console.log("Returning existing object"),l[b][d[0]]):(l[b][c]=a,l[b][c])}return l[b]={},l[b][c]=a,l[b][c]}return null}function f(a){var b=null,c=null;return a&&j().length>0?(b=a.appContext,c=a.id,i("DEBUG")&&console.log("EndpointRegistry.remove() Trying to remove object",a),l.hasOwnProperty(b)&&l[b].hasOwnProperty(c)?(delete l[b][c],0===Object.keys(l[b]).length&&delete l[b],!0):(i("DEBUG")&&console.log("EndpointRegistry.remove() object not found",j()),!1)):!1}function g(){j().forEach(function(a){"function"==typeof a.destroy&&a.destroy(),f(a)})}function h(){return this.list().length}function j(){var a=[];return Object.keys(l).forEach(function(b){Object.keys(l[b]).forEach(function(c){a.push(l[b][c])})}),a}var k=a&&a.singleEndpoint?a.singleEndpoint:!1,l={},m=[];return{add:e,get:b,getOneAvailable:c,findByProperty:d,remove:f,destroy:g,length:h,list:j}},f=new b.Log,g=f.s,h=f.g,i=f.l,j=b.generateUUID,k=(b.generateRandomBytes,b.validateConfig,b.applyConfig),l=b.setConfig,m=(f.log,function(a){this.dependencies={connection:null},this.subscriptions={},this.dependencies.connection=a&&a.connection,this.events={message:[]}});m.prototype=b.RtcommBaseObject.extend({subscribe:function(a){this.subscriptions[a]=null;var b=this;b.dependencies.connection.subscribe(a,function(c){i("DEBUG")&&console.log("MqttEndpoint.subscribe() Received message["+c+"] on topic: "+a),b.emit("message",c)})},unsubscribe:function(a){var b=this;if(!this.subscriptions.hasOwnProperty(a))throw new Error("Topic not found:"+a);delete this.subscriptions[a],b.dependencies.connection.unsubscribe(a)},publish:function(a,b){this.dependencies.connection.publish(a,b)},destroy:function(){i("DEBUG")&&console.log("Destroying mqtt(unsubscribing everything... ");var a=this;Object.keys(this.subscriptions).forEach(function(b){a.unsubscribe(b)})}});var n=function(a){var b=null;return b=a.replace(/\/+/g,"/").replace(/\/$/g,""),/^\//.test(b)?b:"/"+b},o=function(a,b){this.objName="PresenceNode",this.name=a||"",this.record=b||!1,this.addressTopic=null,this.presenceTopic=null,this.nodes=[],this.id=this.name},p=function(a){var b=/^\/?(.+)$/.exec(a.trim());return b[1]?b[1].split("/"):[]};o.prototype=b.RtcommBaseObject.extend({update:function(){},flatten:function(){var a=[];return this.nodes.forEach(function(b){b.record?a.push(b):a.concat(b.flatten())}),a},getSubNode:function(a){var b=p(a),c=this.findSubNode(b);return c?c:this.createSubNode(b)},findSubNode:function(a){i("DEBUG")&&console.log(this+".findSubNode() searching for nodes --> ",a);var b=null;if("/"===this.name&&"/"!==a[0]&&a.unshift("/"),i("DEBUG")&&console.log(this+".findSubNode() this.name is: "+this.name),a[0]===this.name){var c=null;i("DEBUG")&&console.log(this+".findSubNode() searching node "+a[0]+" for "+a[1]);for(var d=0;d<this.nodes.length;d++)if(this.nodes[d].name===a[1]){i("DEBUG")&&console.log(this+".findSubNode() >>> We found "+a[1]),c=this.nodes[d].findSubNode(a.slice(1));break}a[1]?(i("DEBUG")&&console.log(this+".findSubNode() >>> The match was found for: "+a[1]),b=c):b=this}else b=this;return i("DEBUG")&&console.log(this+".findSubNode() >>> RETURNING: ",b),b},createSubNode:function(a){if(i("DEBUG")&&console.log(this+".createSubNode() Would created node for nodes --> ",a),a[0]===this.name){if(a.length>1){var b=this.findSubNode(a.slice(0,2));return b||(i("DEBUG")&&console.log(this+".createSubNode() Creating Node: "+a[1]),b=new o(a[1]),this.nodes.push(b)),b.createSubNode(a.slice(1))}return i("DEBUG")&&console.log(this+".createSubNode() Not Creating Node, return this: ",this),this}return null},deleteSubNode:function(a){var b=p(a),c=this.findSubNode(b);if(c){i("DEBUG")&&console.log(this+".deleteSubNode() Deleting Node: "+c.name);var d=this.findSubNode(b.slice(0,b.length-1));i("DEBUG")&&console.log(this+".deleteSubNode() Found parent: ",d);var e=d.nodes.indexOf(c);d.nodes.splice(e,1)}else i("DEBUG")&&console.log(this+".deleteSubNode() Node not found for topic: "+a)},addPresence:function(a,b){var c=this.getSubNode(a);if(c.presenceTopic=a,i("DEBUG")&&console.log(this+".addPresence() created node: ",c),c.record=!0,"undefined"!=typeof b.self&&(c.self=b.self),b.content){var d=null;"string"==typeof b.content&&(d=JSON.parse(b.content)),c.alias=d.alias||null,c.state=d.state||"unknown",c.addressTopic=d.addressTopic||null,c.nodes=d.userDefines||[]}},removePresence:function(a){this.deleteSubNode(a)}});var q=function(a){this.objName="PresenceMonitor",this._={},this.config={},this.dependencies={connection:null},this._.presenceData=[],this._.subscriptions=[],this.dependencies.connection=a&&a.connection,this._.sphereTopic=a&&a.connection?n(a.connection.getPresenceRoot()):null,this.events={updated:[]}};q.prototype=b.RtcommBaseObject.extend(function(){function a(a){i("DEBUG")&&console.log("PresenceMonitor received message: ",a);var b=a.fromEndpointID,c=new RegExp("^"+this._.sphereTopic+"(.+)$");this.dependencies.connection.getMyPresenceTopic()===a.topic&&(a.self=!0);var d=c.exec(a.topic)[1],e=this.getRootNode();e?(a.content&&""!==a.content?e.addPresence(d,a):e.removePresence(d,b),this.emit("updated",this.getPresenceData())):i("DEBUG")&&console.error("No Root node... dropping presence message")}return{add:function(b){this._.presenceData;b=n(b);var c=null,d=null,e=null;if(!this._.sphereTopic)throw new Error("Adding a topic to monitor requires the EndpointProvider be initialized");d=n(this._.sphereTopic+b+"/#");var f=b.split("/");if(c=""===f[0]?f[1]:f[0],e=this.getRootNode())e.getSubNode(b);else{var g=new o(c);this._.presenceData.push(g),g.getSubNode(b)}return this.dependencies.connection.subscribe(d,a.bind(this)),this._.subscriptions.push(d),this},setEndpointConnection:function(a){a&&(this.dependencies.connection=a,this._.sphereTopic=n(a.getPresenceRoot())||null)},getPresenceData:function(){return this._.presenceData[0].nodes},getRootNode:function(){var a=null,b=this._.presenceData;return 1===b.length?a=b[0]:(a=new o("/"),this._.presenceData[0]=a),a},__getRootNode:function(a){var b=null,c=null,d=null,e=this._.presenceData,f=n(a).split("/");d=""===f[0]?f[1]:f[0];for(var g=0;g<e.length;g++){if(console.log("REMOVE ME "+f+" rootTopic: "+d+" pd.name: "+e[g].name),e[g].name===d){b=e[g];break}""===e[g].name&&(c=e[g])}return b=b?b:c?c:null,i("DEBUG")&&console.log(this+".getRootNode() for topic:"+a+" found: ",b),b},destroy:function(){i("DEBUG")&&console.log("Destroying mqtt(unsubscribing everything... ");var a=this;this._.presenceData=[],Object.keys(this._.subscriptions).forEach(function(b){a.dependencies.connection.unsubscribe(b)})}}}());var r=function(){var a=function(a){var b=this;Object.keys(a).forEach(function(c){a.hasOwnProperty(c)&&(b[c]=a[c])}),this.topic=/#$/.test(a.topic)?a.topic:/\/$/.test(a.topic)?a.topic+"#":a.topic+"/#",this.active=!1,this.callback=null,this.paused=!1,this.regex=null,this.autoPause=!1},b={};this.add=function(c){c.forEach(function(c){b.hasOwnProperty[c.endpointID]||(b[c.endpointID]=new a(c))})},this.get=function(a){return b[a]||null},this.findByTopic=function(a){var c=[];if(console.log(Object.keys(b)),Object.keys(b).forEach(function(d){i("DEBUG")&&console.log("Queues.findByTopic testing "+a+" against regex: "+b[d].regex),b[d].regex&&b[d].regex.test(a)&&c.push(b[d])}),1===c.length)return c[0];throw new Error("Multiple Queue matches for topic("+a+")- should not be possible")},this.all=function(){return b},this.list=function(){return Object.keys(b)}};r.prototype.toString=function(){this.list()};var s=function(){var a=function(a){var b=function(b){return{type:"chat",content:{message:b,from:a.userid}}};this._={},this._.objName="Chat",this.id=a.id,this._.parentConnected=!1,this._.enabled=!1,this.onEnabledMessage=null,this.onDisabledMessage=null,this.state="disconnected",this.events={message:[],ringing:[],connected:[],alerting:[],disconnected:[]},this.enable=function(c){return i("DEBUG")&&console.log(this+".enable() - current state --> "+this.state),this.onEnabledMessage=c||b(a.userid+" has initiated a Chat with you"),this._.enabled=!0,a.sessionStarted()?(i("DEBUG")&&console.log(this+".enable() - Session Started, connecting chat"),this._connect()):(i("DEBUG")&&console.log(this+".enable() - Session not starting, may respond, but also connecting chat"),a._.activeSession&&a._.activeSession.respond(),this._connect()),this},this.accept=function(a){return i("DEBUG")&&console.log(this+".accept() -- accepting -- "+this.state),"alerting"===this.state?(this.enable(a||"Accepting chat connection"),!0):!1},this.reject=function(){},this.disable=function(c){return this._.enabled&&(this._.enabled=!1,this.onDisabledMessage=c||b(a.userid+" has left the chat"),this.send(this.onDisabledMessage),this._setState("disconnected")),null},this.send=function(c){c=c&&c.payload?c.payload:c,c=c&&"chat"===c.type?c:b(c),a._.activeSession&&a._.activeSession.send(c)},this._connect=function(a){return a=a&&"function"==typeof a?a:this.send.bind(this),this._.enabled?(this.onEnabledMessage&&a({payload:this.onEnabledMessage}),this._setState("connected"),!0):(i("DEBUG")&&console.log(this+"_connect() !!!!! not enabled, skipping..."),!1)},this._processMessage=function(b){return"connected"===this.state?this.emit("message",b.message):a.sessionStopped()||(a._.activeSession&&a._.activeSession.pranswer(),this._setState("alerting",b.message)),this},this._setState=function(a,b){i("DEBUG")&&console.log(this+"._setState() setting state to: "+a);var c=this.state;try{this.state=a,this.emit(a,b)}catch(d){console.error(d),console.error(this+"._setState() unsupported state: "+a),this.state=c}}};a.prototype=b.RtcommBaseObject.extend({});var c=function(b){var c=new a(b);return c.on("ringing",function(){"session:ringing"!==b.lastEvent&&b.emit("session:ringing")}),c.on("message",function(a){b.emit("chat:message",{message:a})}),c.on("alerting",function(a){var c={};c.message=a,c.protocols="chat",b.emit("session:alerting",c)}),c.on("connected",function(){b.emit("chat:connected")}),c.on("disconnected",function(){b.emit("chat:disconnected")}),c},d=function(a){var b=new t(a);return b.on("ringing",function(){"session:ringing"!==a.lastEvent&&a.emit("session:ringing")}),b.on("alerting",function(){a.emit("session:alerting",{protocols:"webrtc"})}),b.on("connected",function(){a.emit("webrtc:connected")}),b.on("disconnected",function(){a.emit("webrtc:disconnected")}),b},e=function(a){this.config={ignoreAppContext:!0,appContext:null,userid:null,chat:!0,webrtc:!0},this.dependencies={endpointConnection:null},this._={objName:"RtcommEndpoint",activeSession:null,available:!0,uuid:j(),initialized:!1,protocols:[],inboundMedia:null,attachMedia:!1,localStream:null,media:{In:null,Out:null}},this.lastEvent=null,this.state="session:stopped";var b=this;a&&Object.keys(a).forEach(function(c){b.config[c]=a[c]}),this.config.webrtc&&this._.protocols.push("webrtc"),this.config.chat&&this._.protocols.push("chat"),this.id=this._.uuid,this.userid=this.config.userid||null,this.appContext=this.config.appContext||null,this.webrtc=this.config.webrtc?d(this):null,this.chat=this.config.chat?c(this):null,this.events={"session:started":[],"session:refer":[],"session:trying":[],"session:queued":[],"session:ringing":[],"session:alerting":[],"session:failed":[],"session:stopped":[],"webrtc:connected":[],"webrtc:disconnected":[],"webrtc:failed":[],"chat:message":[],"chat:connected":[],"chat:disconnected":[],destroyed:[]}};return e.prototype=b.RtcommBaseObject.extend(function(){function a(a,b){console.log("REMOVE ME: ",a);var c=null,d=null;if("object"==typeof a){if(!a.remoteEndpointID||!a.toTopic)throw new Error("Invalid object passed on connect! should be {remoteEndpointID: something, toTopic: something}");c=a.remoteEndpointID,d=a.toTopic,console.log("toTopic?: "+d),console.log("remoteEndpointID?: "+c)}else c=a;i("DEBUG")&&console.log(b+" createSignalingSession context: ",b);var e=null;if(!c)throw new Error("remoteEndpointID must be set");var f=b.dependencies.endpointConnection.createSession({id:e,toTopic:d,protocols:b._.protocols,remoteEndpointID:c,appContext:b.config.appContext});return f}function c(a,b){return b.on("have_pranswer",function(b){a.setState("session:ringing"),a._processMessage(b)}),b.on("queued",function(b){i("DEBUG")&&console.log("SigSession callback called to queue: ",b);var c=0;"undefined"!=typeof b.queuePosition?(c=b.queuePosition,a.setState("session:queued",{queuePosition:c}),b=b.message?b.message:b):(a.setState("session:queued"),a._processMessage(b))}),b.on("message",function(b){i("DEBUG")&&console.log("SigSession callback called to process content: ",b),a._processMessage(b)}),b.on("started",function(b){b&&a._processMessage(b),a.setState("session:started")}),b.on("stopped",function(){a.setState("session:stopped"),a.disconnect()}),b.on("starting",function(){a.setState("session:trying"),console.log("Session Starting")}),b.on("failed",function(b){a.disconnect(),a.setState("session:failed",{reason:b})}),i("DEBUG")&&console.log(a+" createSignalingSession created!",b),!0}return{getAppContext:function(){return this.config.appContext},newSession:function(a){var d=null;if(this.config.ignoreAppContext||a.appContext&&a.appContext===this.getAppContext()||"undefined"==typeof a.appContext)if(this.available()){this._.activeSession=a,c(this,a);var e=b.commonArrayItems(this._.protocols,a.protocols);i("DEBUG")&&console.log(this+".newSession() common protocols: "+e),a.referralTransaction?(i("DEBUG")&&console.log(this+".newSession() REFER"),this.setState("session:refer")):e.length>0?(a.start({protocols:e}),a.message&&a.message.payload?this._processMessage(a.message.payload):(a.pranswer(),this.setState("session:alerting",{protocols:e}))):(i("DEBUG")&&console.log(this+".newSession() No common protocols"),a.fail("No common protocols")),this.available(!1)}else d="Busy",i("DEBUG")&&console.log(this+".newSession() "+d),a.fail("Busy");else d="Client is unable to accept a mismatched appContext: ("+a.appContext+") <> ("+this.getAppContext()+")",i("DEBUG")&&console.log(this+".newSession() "+d),a.fail(d)},_processMessage:function(a){var b;a.protocols&&(b=a.protocols,a=a.payload),b!==this._.protocols&&(console.log("msg protocols?",b),console.log("my protocols?",this._.protocols));var c=this;a?"chat"===a.type?this.config.chat?this.chat._processMessage(a.content):console.error("Received chat message, but chat not supported!",a):"webrtc"===a.type?this.config.webrtc&&this.webrtc&&(this.webrtc.enabled()?c.webrtc._processMessage(a.content):this.webrtc.enable({connect:!1},function(b){b&&c.webrtc._processMessage(a.content)})):console.error(this+" Received message, but unknown protocol: ",a):i("DEBUG")&&console.log(this+" Received message, but nothing to do with it",a)},available:function(a){return"boolean"==typeof a?(this._.available=a,i("DEBUG")&&console.log(this+".available() setting available to "+a),a):this._.available},connect:function(b){console.log("REMOVE ME:  ",b);var d=null,e=null;if("object"==typeof b){if(!b.remoteEndpointID||!b.toTopic)throw new Error("Invalid object passed on connect! should be {remoteEndpointID: something, toTopic: something}");d=b.remoteEndpointID,e=b.toTopic}else d=b;if(i("DEBUG")&&console.log(this+".connect() using remoteEndpointID: "+d+" & toTopic:"+e),!this.ready())throw new Error("Unable to connect endpoint until EndpointProvider is initialized");return this.available(!1),this._.activeSession||(this._.activeSession=a(b,this),c(this,this._.activeSession)),this.setState("session:trying"),this.config.webrtc&&this.webrtc._connect(this._.activeSession.start.bind(this._.activeSession))?i("DEBUG")&&console.log(this+".connect() initiating with webrtc._connect"):this.config.chat&&this.chat._connect(this._.activeSession.start.bind(this._.activeSession))?i("DEBUG")&&console.log(this+".connect() initiating with chat._connect"):(i("DEBUG")&&console.log(this+".connect() sending startMessage w/ no content"),this._.activeSession.start()),this},disconnect:function(){return this.webrtc&&this.webrtc.disable(),this.chat&&this.chat.disable(),this.sessionStarted()?(this._.activeSession.stop(),this._.activeSession=null,this.setState("session:stopped")):this._.activeSession=null,this.available(!0),this},accept:function(a){return"session:refer"===this.getState()?this.connect(null):this.webrtc&&this.webrtc&&this.webrtc.accept(a)?i("DEBUG")&&console.log(this+".accept() Accepted in webrtc."):this.chat&&this.chat.accept(a)?i("DEBUG")&&console.log(this+".accept() Accepted in chat."):(i("DEBUG")&&console.log(this+".accept() accepting generically."),this.sessionStarted()||this._.activeSession.respond()),this},reject:function(){return i("DEBUG")&&console.log(this+".reject() invoked "),this.webrtc.reject(),this.chat.reject(),this._.activeSession&&this._.activeSession.fail("The user rejected the call"),this._.activeSession=null,this.available(!0),this},setEndpointConnection:function(a){this.webrtc&&this.webrtc.setIceServers(a.RTCOMM_CONNECTOR_SERVICE),this.dependencies.endpointConnection=a},getUserID:function(){return this.config.userid},setUserID:function(a){this.userid=this.config.userid=a},getState:function(){return this.state},ready:function(){var a=this.dependencies.endpointConnection?!0:!1;return a},sessionStarted:function(){return this._.activeSession&&"started"===this._.activeSession.getState()},sessionStopped:function(){var a=this._.activeSession?"stopped"===this._.activeSession.getState():!0;return a},getRemoteEndpointID:function(){return this._.activeSession?this._.activeSession.remoteEndpointID:"none"},getLocalEndpointID:function(){return this.userid},destroy:function(){i("DEBUG")&&console.log(this+".destroy Destroying RtcommEndpoint"),this.emit("destroyed"),this.disconnect(),i("DEBUG")&&console.log(this+".destroy() - detaching media streams"),i("DEBUG")&&console.log(this+".destroy() - Finished")
},_Event:function(a,b){var c={eventName:"",endpoint:null};return i("DEBUG")&&console.log(this+"_Event -> creating event["+a+"], augmenting with",b),c.eventName=a,c.endpoint=this,"object"==typeof b&&Object.keys(b).forEach(function(a){c[a]=b[a]}),i("DEBUG")&&console.log(this+"_Event -> created event: ",c),c}}}()),e}(),t=function(){function a(a,b,c){var e=null;if("undefined"==typeof d)throw new Error("No RTCPeerConnection Available - unsupported browser");return i("DEBUG")&&console.log("Creating PeerConnection with RTCConfiguration: "+a+"and contrainsts: "+b),e=new d(a,b),e.onicecandidate=function(a){if(i("DEBUG")&&console.log(this+"onicecandidate Event",a),a.candidate){i("DEBUG")&&console.log(this+"onicecandidate Sending Ice Candidate");var b={type:a.type,candidate:a.candidate};this.send(b)}}.bind(c),e.oniceconnectionstatechange=function(){return null===this.pc?void(i("DEBUG")&&console.log(this+" oniceconnectionstatechange ICE STATE CHANGE fired but this.pc is null")):(i("DEBUG")&&console.log(this+" oniceconnectionstatechange ICE STATE CHANGE "+this.pc.iceConnectionState),void("disconnected"===this.pc.iceConnectionState?this.disable():"connected"===this.pc.iceConnectionState&&this._setState("connected")))}.bind(c),e.onaddstream=function(a){i("DEBUG")&&console.log(this+" onaddstream Remote Stream Arrived!",a),i("TRACE")&&console.log("TRACE onaddstream AUDIO",a.stream.getAudioTracks()),i("TRACE")&&console.log("TRACE onaddstream Video",a.stream.getVideoTracks()),a.stream.getAudioTracks().length>0,a.stream.getVideoTracks().length>0,c._.remoteStream=a.stream,c.getMediaIn()&&(i("DEBUG")&&console.log(this+" onaddstream Attaching inbound stream to: ",c.getMediaIn()),h(c.getMediaIn(),a.stream))}.bind(c),e.onnegotiationneeded=function(a){i("DEBUG")&&console.log("ONNEGOTIATIONNEEDED : Received Event - ",a),"stable"===this.pc.signalingState&&"CONNECTED"===this.getState()?this.pc.createOffer(function(a){this.pc.setLocalDescription(a,function(){this.send(a)}.bind(this),function(a){console.error(a)})}.bind(this),function(a){console.error(a)}):i("DEBUG")&&console.log("ONNEGOTIATIONNEEDED Skipping renegotiate - not stable && connected. State: "+this.pc.signalingState)}.bind(c),e.onsignalingstatechange=function(a){i("DEBUG")&&console.log("peerConnection onsignalingstatechange fired: ",a)}.bind(c),e.onclosedconnection=function(a){i("DEBUG")&&console.log("FIREFOX peerConnection onclosedconnection fired: ",a)}.bind(c),e.onconnection=function(a){i("DEBUG")&&console.log("FIREFOX peerConnection onconnection fired: ",a)}.bind(c),e.onremovestream=function(a){return i("DEBUG")&&console.log("peerConnection onremovestream fired: ",a),null===this.pc?void(i("DEBUG")&&console.log("peerConnection onremovestream fired: ",a)):void 0}.bind(c),e}var c=function(a){var b={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}};this.config={RTCConfiguration:{iceTransports:"all"},RTCOfferConstraints:b,RTCConstraints:{optional:[{DtlsSrtpKeyAgreement:"true"}]},iceServers:[],mediaIn:null,mediaOut:null,broadcast:{audio:!0,video:!0}},this.dependencies={parent:a||null},this._={state:"disconnected",objName:"WebRTCConnection",parentConnected:!1,enabled:!1},this.id=a.id,this.events={alerting:[],ringing:[],trying:[],connected:[],disconnected:[]},this.pc=null,this.onEnabledMessage=null,this.onDisabledMessage=null};c.prototype=b.RtcommBaseObject.extend(function(){return{enable:function(b,c){var d=this,e=d.dependencies.parent;i("DEBUG")&&console.log(d+".enable()  --- entry ---");var f=b&&b.RTCConfiguration?b.RTCConfiguration:this.config.RTCConfiguration;f.iceServers=f.iceServers||this.getIceServers();var g=b&&b.RTCConstraints?b.RTCConstraints:this.config.RTCConstraints;this.config.RTCOfferConstraints=b&&b.RTCOfferConstraints?b.RTCOfferConstraints:this.config.RTCOfferConstraints;var h=b&&"boolean"==typeof b.connect?b.connect:e.sessionStarted(),j=b&&"boolean"==typeof b.lazyAV?b.lazyAV:!0;if(i("DEBUG")&&console.log(d+".enable() config created, defining callback"),c=c||("function"==typeof b?b:function(a,b){i("DEBUG")&&console.log(d+".enable() default callback(success="+a+",message="+b)}),this._.enabled)return this.enableLocalAV(c),this;i("DEBUG")&&console.log(d+".enable() connect if possible? "+h);try{this.pc=a(f,g,this)}catch(k){throw new Error(k)}return this._.enabled=!0,i("DEBUG")&&console.log(d+".enable() (lazyAV="+j+",connect="+h),j||h?h?this._connect(null,c(!0)):c(!0):this.enableLocalAV(function(a,b){i("DEBUG")&&console.log(d+".enable() enableLocalAV Callback(success="+a+",message="+b),c(!0)}),this},disable:function(){return this.onEnabledMessage=null,this._.enabled=!1,this._disconnect(),this.pc&&(this.pc=null),this},enabled:function(){return this._.enabled},_connect:function(a,b){var c=this;a=a&&"function"==typeof a?a:this.send.bind(this),b=b||function(a,b){i("DEBUG")&&console.log(c+"._connect() default callback(success="+a+",message="+b)};var d=function(d,e){d?c.pc.createOffer(function(d){i("DEBUG")&&console.log(c+".enable() createOffer created: ",d),a({payload:c.createMessage(d)}),c._setState("trying"),c.pc.setLocalDescription(d,function(){i("DEBUG")&&console.log("************setLocalDescription Success!!! "),b(!0)},function(a){b(!1,a)})},function(a){console.error("webrtc._connect failed: ",a),b(!1)},c.config.RTCOfferConstraints):(b(!1),console.error("_connect failed, "+e))};return this._.enabled&&this.pc?(this.enableLocalAV(d),!0):!1},_disconnect:function(){return this.pc&&"closed"!==this.pc.signalingState&&(i("DEBUG")&&console.log(this+"._disconnect() Closing peer connection"),this.pc.close()),j(this.getMediaIn()),this._.remoteStream=null,j(this.getMediaOut()),"disconnected"!==this.getState()&&this._setState("disconnected"),this},send:function(a){var b=this.dependencies.parent;a=a&&a.payload?a.payload:a,b._.activeSession&&b._.activeSession.send(this.createMessage(a))},accept:function(){var a=this,b=function(){i("DEBUG")&&console.log(this+".accept() -- doAnswer -- peerConnection? ",a.pc),i("DEBUG")&&console.log(this+".accept() -- doAnswer -- constraints: ",a.config.RTCOfferConstraints),console.log("localsttream audio:"+a._.localStream.getAudioTracks().length),console.log("localsttream video:"+a._.localStream.getVideoTracks().length),console.log("PC has a lcoalMediaStream:"+a.pc.getLocalStreams(),a.pc.getLocalStreams()),a.pc&&a.pc.createAnswer(a._gotAnswer.bind(a),function(a){console.error("failed to create answer",a)},a.config.RTCOfferConstraints)};return i("DEBUG")&&console.log(this+".accept() -- accepting --"),"alerting"===this.getState()?(this.enableLocalAV(b),!0):!1},reject:function(){this._disconnect()},getState:function(){return this._.state},_setState:function(a){i("DEBUG")&&console.log(this+"._setState to "+a),this._.state=a;var b=a;i("DEBUG")&&console.log(this+"._setState emitting event "+b),this.emit(b)},broadcastReady:function(){return(this.config.broadcast.audio||this.config.broadcast.video)&&"object"==typeof this._.localStream?!0:this.config.broadcast.audio===!1&&this.config.broadcast.video===!1?!0:!1},setBroadcast:function(a){return this.config.broadcast.audio=a.hasOwnProperty("audio")&&"boolean"==typeof a.audio?a.audio:this.config.broadcast.audio,this.config.broadcast.video=a.hasOwnProperty("video")&&"boolean"==typeof a.video?a.video:this.config.broadcast.video,this},pauseBroadcast:function(){this._.localStream&&(this._.localStream.getVideoTracks()[0].enabled=!1,this._.localStream.getAudioTracks()[0].enabled=!1)},resumeBroadcast:function(){this._.localStream&&(this._.localStream.getVideoTracks()[0].enabled=!0,this._.localStream.getAudioTracks()[0].enabled=!0)},getMediaIn:function(){return this.config.mediaIn},setMediaIn:function(a){if(!k(a))throw new TypeError("Media Element object is invalid");return this._.remoteStream?(h(a,this._.remoteStream),this.config.mediaIn=a):(j(a),this.config.mediaIn=a),this},getMediaOut:function(){return this.config.mediaOut},setMediaOut:function(a){if(!k(a))throw new TypeError("Media Element object is invalid");return this._.localStream?(h(a,this._.localStream),this.config.mediaOut=a):(j(a),this.config.mediaOut=a),this},_gotAnswer:function(a){i("DEBUG")&&console.log(this+".createAnswer answer created:  ",a);var b=null,c=this.pc.signalingState,d=this.dependencies.parent._.activeSession,e=d.getState(),f="have-remote-offer"===c&&"starting"===e,g="pranswer"===e||"have-local-pranswer"===c,h=!1,j=this.createMessage(a);i("DEBUG")&&console.log(this+".createAnswer._gotAnswer: pcSigState: "+c+" SIGSESSION STATE: "+e),g?(i("DEBUG")&&console.log(this+".createAnswer sending answer as a RESPONSE"),console.log(this+".createAnswer sending answer as a RESPONSE",j),d.respond(!0,j),this._setState("connected")):f?(i("DEBUG")&&console.log(this+".createAnswer sending PRANSWER"),this._setState("alerting"),b={},b.type="pranswer",b.sdp=this.pranswer?a.sdp:"",a=b,d.pranswer(this.createMessage(a))):"connected"===this.getState()||"alerting"===this.getState()?(i("DEBUG")&&console.log(this+".createAnswer sending ANSWER (renegotiation?)"),d.send(j)):(h=!0,this._setState("alerting")),h=f&&b&&""===b.sdp||h,i("DEBUG")&&console.log("_gotAnswer: Skip setLocalDescription? "+h),h||this.pc.setLocalDescription(a,function(){i("DEBUG")&&console.log("setLocalDescription in _gotAnswer was successful",a)}.bind(this),function(a){console.error(a)})},createMessage:function(a){return a&&a.type&&a.content?a:{type:"webrtc",content:a}},_processMessage:function(a){var b=this,c=this.pc?!0:!1;if(a)if(i("DEBUG")&&console.log(this+"._processMessage Processing Message...",a),a.type)switch(a.type){case"pranswer":c&&"have-local-offer"===this.pc.signalingState&&(c&&this.pc.setRemoteDescription(new e(a)),this._setState("ringing"));break;case"answer":i("DEBUG")&&console.log(this+"._processMessage ANSWERING",a),c&&this.pc.setRemoteDescription(new e(a),function(){i("DEBUG")&&console.log("Successfully set the ANSWER Description")},function(a){console.error("setRemoteDescription has an Error",a)}),this._setState("connected");break;case"offer":var d=a;i("DEBUG")&&console.log(this+"_processMessage received an offer -> State:  "+this.getState()),"disconnected"===this.getState()?b.pc.setRemoteDescription(new e(d),function(){i("DEBUG")&&console.log(this+" PRANSWER in processMessage for offer()"),b.dependencies.parent.sessionStarted()||b.dependencies.parent._.activeSession.pranswer({type:"pranswer",sdp:""}),this._setState("alerting")}.bind(b),function(a){console.error("setRemoteDescription has an Error",a)}):"connected"===this.getState()?c&&this.pc.setRemoteDescription(new e(a),function(){this.pc.createAnswer(this._gotAnswer.bind(this),function(a){console.error("Failed to create Answer:"+a)})}.bind(this),function(a){console.error("setRemoteDescription has an Error",a)}):i("DEBUG")&&console.error(this+"_processMessage unable to process offer("+this.getState()+")",a);break;case"icecandidate":i("DEBUG")&&console.log(this+"_processMessage iceCandidate --> message:",a);try{var g=new f(a.candidate);i("DEBUG")&&console.log(this+"_processMessage iceCandidate ",g),c&&this.pc.addIceCandidate(g)}catch(h){console.error("addIceCandidate threw an error",h)}break;default:console.error(this+"._processMessage() Nothing to do with this message:",a)}else i("DEBUG")&&console.log(this+"_processMessage Unknown Message",a)},setLocalMedia:function(a,b){var c=!1;i("DEBUG")&&console.log(this+"setLocalMedia() using config:",a),a&&"object"==typeof a?(a.mediaIn&&this.setMediaIn(a.mediaIn),a.mediaOut&&this.setMediaOut(a.mediaOut),a.broadcast&&this.setBroadcast(a.broadcast),c="boolean"==typeof a.enable?a.enable:c):a&&"function"==typeof a?b=a:i("DEBUG")&&console.log(this+"setLocalMedia() using defaults");var d=this.config.broadcast.audio,e=this.config.broadcast.video,f=this;return b=b||function(a,b){i("DEBUG")&&console.log(f+".setLocalMedia() default callback(success="+a+",message="+b)},i("DEBUG")&&console.log(f+".setLocalMedia() audio["+d+"] & video["+e+"], enable["+c+"]"),c&&this.enableLocalAV(b),this},enableLocalAV:function(a,b){var c,d,e=this;a&&"object"==typeof a?(c=a.audio,d=a.video,this.setBroadcast({audio:c,video:d})):(b="function"==typeof a?a:function(a,b){i("DEBUG")&&console.log(e+".enableLocalAV() default callback(success="+a+",message="+b)},c=this.config.broadcast.audio,d=this.config.broadcast.video);var f=function(a){return e.getMediaOut()&&h(e.getMediaOut(),a),e.pc?e.pc.getLocalStreams()[0]===a?!0:(e._.localStream=a,e.pc.addStream(a),!0):(i("DEBUG")&&console.log(e+".enableLocalAV() -- No peerConnection available"),!1)};c||d?this._.localStream?(i("DEBUG")&&console.log(e+".enableLocalAV() already setup, reattching stream"),b(f(this._.localStream))):g({audio:c,video:d},function(a){b(f(a))},function(){b(!1,"getUserMedia failed")}):i("DEBUG")&&console.log(e+".enableLocalAV() - nothing to do; both audio & video are false")},setIceServers:function(a){function b(a){var b=/^turn:(\S+)\@(\S+\:\d+):credential:(.+$)/.exec(a),c=b[1]||null,d=b[2]||null,e=b[3]||null,f={url:null,username:null,credential:null};return c&&d&&e?(f.url="turn:"+d,f.username=c,f.credential=e):(i("DEBUG")&&console.log("Unable to parse the url into a Turn Server"),f=null),f}var c=[];a&&a.iceURL&&a.iceURL.split(",").forEach(function(a){a=a.trim();var d=null;/^stun:/.test(a)?(i("DEBUG")&&console.log(this+".setIceServers() Is STUN: "+a),d={url:a}):/^turn:/.test(a)?(i("DEBUG")&&console.log(this+".setIceServers() Is TURN: "+a),d=b(a)):i("DEBUG")&&console.error("Failed to match anything, bad Ice URL: "+a),d&&c.push(d)}),this.config.iceServers=c},getIceServers:function(){return this.config.iceServers}}}());var d=function(){return"undefined"==typeof navigator&&"undefined"==typeof window?null:navigator&&navigator.mozGetUserMedia?mozRTCPeerConnection:navigator&&navigator.webkitGetUserMedia?webkitRTCPeerConnection:null}(),e=function(){return"undefined"==typeof navigator&&"undefined"==typeof window?null:navigator&&navigator.mozGetUserMedia?mozRTCSessionDescription:"undefined"!=typeof RTCSessionDescription?RTCSessionDescription:null}();i("DEBUG")&&console.log("Setting RTCSessionDescription",e);var f=function(){return"undefined"==typeof navigator&&"undefined"==typeof window?null:navigator&&navigator.mozGetUserMedia?mozRTCIceCandidate:"undefined"!=typeof RTCIceCandidate?RTCIceCandidate:null}();i("DEBUG")&&console.log("RTCIceCandidate",f);var g,h,j,k=function(a){return"undefined"!=typeof a.srcObject||"undefined"!=typeof a.mozSrcObject||"undefined"!=typeof a.src};if("undefined"==typeof navigator&&"undefined"==typeof window)g=null,h=null,j=null;else if(navigator&&navigator.mozGetUserMedia)g=navigator.mozGetUserMedia.bind(navigator),h=function(a,b){i("DEBUG")&&console.log("FIREFOX --> Attaching media stream");try{a.mozSrcObject=b}catch(c){console.error("Attach Media Stream failed in FIREFOX:  ",c)}},j=function(a){i("DEBUG")&&console.log("FIREFOX --> Detaching media stream"),a&&(a.mozSrcObject=null)};else if(navigator&&navigator.webkitGetUserMedia)g=navigator.webkitGetUserMedia.bind(navigator),h=function(a,b){"undefined"!=typeof a.srcObject?a.srcObject=b:"undefined"!=typeof a.mozSrcObject?a.mozSrcObject=b:"undefined"!=typeof a.src?a.src=URL.createObjectURL(b):console.error("Error attaching stream to element.")},j=function(a){var b="";a&&("undefined"!=typeof a.srcObject?a.srcObject=b:"undefined"!=typeof a.mozSrcObject?a.mozSrcObject=b:"undefined"!=typeof a.src?a.src=b:console.error("Error attaching stream to element."))};else{console.error("Browser does not appear to be WebRTC-capable");var l=function(){console.error("Function not supported in browser")};g=l,h=l,j=l}return c}();return d});